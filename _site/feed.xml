<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>si.mpli.st</title>
		<description>si.mpli.st by premist</description>
		<link>http://si.mpli.st</link>
		<atom:link href="http://si.mpli.st/feed.xml" rel="self" type="application/rss+xml" />
		
			
			<item>
				<title>OSAKA 2012 - DAY 1</title>
				<description>&lt;h3&gt;출발&lt;/h3&gt;

&lt;p&gt;여행 당일 새벽까지 라이브 블로그인 followmyfootprint를 만들다가 아침 일찍 리무진을 타고 공항으로 출발하였다. 오후 2시에 출발하는 비행기였지만 늘 공항에 4시간 이상은 일찍 가는 편이라 7시쯤 집을 나섰는데, 공항 리무진 창문 밖으로 수능 시험장으로 지정된 학교들로 수험생들이 들어가는 장면이 보였다. 수능 잘 보라는 단체 문자도 와 있었고, 페이스북과 트위터 타임라인도 수능 이야기로 가득했다. 일주일 전에 후배가 수능 잘 보라면서 초콜릿을 선물해줬는데, 그 초콜릿을 여행중에 먹게 되니 기분이 오묘했다. &lt;/p&gt;

&lt;p&gt;인천공항에 9시쯤 도착했다. 공항에 도착하면 보통은 항공사 카운터에서 얼리 체크인을 하고 입국장 내부에서 휴식을 취하는데, 저가항공사인 이스타 항공의 경우 다른 항공사와 카운터를 빌려 쓰는 터라 오후 1시까지 카운터 개장을 기다려야 했다. 기다리는 동안 공항에 있는 은행에서 환전을 하였는데, 전날 바빠서 인터넷 환전을 신청하지 않은 탓에 꽤 비싼 이율로 환전을 하게 되었다.&lt;/p&gt;

&lt;p&gt;이후 일행분이 도착하고나서 맥도날드에서 점심을 간단히 해결했다. 이스타 항공의 체크인 카운터가 열리고 탑승 수속을 거쳤고, 보안 검사와 출입국 심사를 받았다. 이전에 자동출입국심사를 등록 해 놓아서 줄을 서지 않고 편하게 출입국 심사를 마칠 수 있었다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2013-10-10-osaka2012-day1-boardingpass.jpg&quot; alt=&quot;이스타항공 탑승권&quot;&gt;&lt;/p&gt;

&lt;p&gt;처음 수속을 밟으면 제1탑승동에 들어가게 되는데, 국적기가 아니거나 저가항공사를 이용하려면 제2탑승동으로 이동을 해야 했다. 미국을 갈 때도 국적기가 아닌 비행기를 타고 갔던 터라 셔틀트레인을 이용해 본 경험이 있는데, 셔틀트레인을 타고 이동할 수 있는 제2탑승동은 항상 제1탑승동에 비해 뭔가 허전하다는 생각이 든다. 일단 규모가 비교적으로 작을뿐더러, 스타벅스 등 매장들의 규모도 작다. 이전까지는 전원과 인터넷이 제공되는 네이버 라운지가 제2탑승동에는 없는 줄 알았지만, 이번에 같이 갔던 분이 발견해서 편하게 탑승 시작을 기다릴 수 있덨다.&lt;/p&gt;

&lt;p&gt;기다리는 동안 KT 홈페이지에 들어가 데이터 로밍 신청을 하였다. 로밍을 하면 데이터가 한국 통신사를 거쳐서 가기 때문에 속도가 느리기 마련인데, 이것 때문에 6월 Google I/O 때문에 샌프란시스코에 갔을 때 느린 데이터 속도 때문에 곤란한 적이 있다.&lt;/p&gt;

&lt;div class=&#39;embed tweet&#39; style=&#39;position: relative; display: block; width: 500px; margin: 0px auto;&#39;&gt;&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p&gt;[followmyfootprint] iOS6에 내장된 애플 지도가 대중교통 길안내는 지원하지 않아서, Google Maps 웹앱 버전을 쓰는 중.... - &lt;a href=&quot;http://t.co/hszlYsIL&quot;&gt;http://t.co/hszlYsIL&lt;/a&gt;&lt;/p&gt;&amp;mdash; Premist (@premist) &lt;a href=&quot;https://twitter.com/premist/statuses/217726855938179072&quot;&gt;June 26, 2012&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;&lt;/div&gt;

&lt;p&gt;공항에서 내려서 한국의 공항철도와 비슷한 바트(BART)를 타고 샌프란시스코 시내로 이동을 해야 했는데, 마침 그 때 iOS 6 베타를 사용하고 있어서 대중교통 검색을 할 수 없는 상황이었다. 설상가상으로 구글이 아직 새로운 지도 앱을 출시하지 않아서 대중교통 검색을 이용하려면 구글 맵을 브라우저로 들어가야 했는데, AT&amp;amp;T의 놀라운 인터넷 속도로는 구글 맵 메인 페이지를 로드하는데만 5분이 넘게 걸렸다. 주변의 안내소의 도움 덕분에 이동을 하긴 했지만, 그 당시에는 일정에 늦을까봐 노심초사했던 기억이 난다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2013-10-10-osaka2012-day1-nexus7.jpg&quot; alt=&quot;구글 지도를 보기 위해 준비한 넥서스 7&quot;&gt;&lt;/p&gt;

&lt;p&gt;이번에는 그러한 사태를 막고자 Google I/O에서 받은 넥서스 7와 갤럭시 넥서스를 챙겨 왔다. 두 기기 모두 안드로이드 구글 지도 앱의 캐싱 기능을 이용하여 오사카 부근의 지도를 캐싱해서 인터넷 연결 없이 기본적인 지도를 볼 수 있게 해 놓았다. 대중교통 검색은 인터넷 연결이 반드시 필요하지만, 지도 텍스쳐를 미리 저장해 놓으면 데이터 사용량을 줄일 수 있을거라 생각했기 때문이다.&lt;/p&gt;

&lt;p&gt;이런저런 생각을 하던 중 탑승 시간이 다 되었고, 비행기 탑승 수속이 시작되었다. 비행기 안은 기존까지 타 본 항공사들의 비행기에 비해서는 작았지만, 그렇다고 자리가 심하게 좁다거나 하진 않았다. 좌석 등급이 별도로 없이 하나의 등급만 있고, 비행기 좌석 등받이에도 광고를 넣은 점이 색다르게 느껴졌다. 아시아나 항공 등 일반적인 항공사의 경우에는 짧은 거리를 운항할 때도 과자나 음료 등을 챙겨주기 마련이고 일부 항공편의 경우 기내식도 제공하는데, 듣던대로 이스타항공은 물을 제외하고는 제공되지 않았다. 사실 비즈니스를 목적으로 비행기를 타는 것이 아닌 일반 여행자들은, 굳이 기내 서비스를 이용할 필요가 없으니 상관 없긴 하다. 가격 절감 차원에서도 좋고...&lt;/p&gt;

&lt;h3&gt;오사카에 어서오세요!&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/2013-10-10-osaka2012-welcome.jpg&quot; alt=&quot;오사카 도착을 환영하는 안내문&quot;&gt;&lt;/p&gt;

&lt;p&gt;약 2시간에 걸쳐 칸사이 국제공항에 도착했다. 칸사이 국제공항은 저가항공사를 위한 제2터미널이 따로 있는데, 이곳에서 &amp;#39;윙셔틀&amp;#39; 이라고 불리우는 열차를 타고 입국 수속장으로 이동하였다. 경험상 입국 수속은 사람이 늘어나면 늘어날수록 걸리는 시간도 기하급수적으로 증가하기 때문에, 거의 뛰다시피 해서 첫 번째로 입국수속을 받을 수 있었다. 미국에 입국할 때는 영어로 여러 가지를 물어봤는데, 일본 검사관은 무뚝뚝하게 도장만 찍어주었다.&lt;/p&gt;

&lt;p&gt;짐을 찾고 공항 밖으로 나왔을 때는 이미 해가 어둑어둑 지고 있을 때였다. 칸사이 국제공항은 오사카 시내에서 꽤 떨어진 섬에 위치해 있는데, 난카이선을 이용하여 숙소가 위치한 신이마미야역으로 이동하기로 했다. 도쿄에서 탔던 NEX선이나 스카이라이너와 비슷한 위치인 &amp;#39;라피도 베타&amp;#39; 라는 열차가 있었지만, 급행 열차만 타도 충분히 빠르다는 블로그 글들을 여럿 보아서 급행 열차를 타기로 했다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2013-10-10-osaka2012-nankai-ticket.jpg&quot; alt=&quot;난카이선 티켓&quot;&gt;&lt;/p&gt;

&lt;p&gt;6시쯤 신이마미야역에 도착하였다. 짐을 풀어야 했으므로 짐을 끌고 숙소로 향하기 시작하였다. 약 10분 쯤 걸어서 우리가 묵을 숙소에 도착할 수 있었는데, 어떤 골목으로 들어가야 할 지 헷갈릴 때 Passbook에 등록했던 airbnb 티켓이 근처임을 안내해 주어서 쉽게 찾아갈 수 있었다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2013-10-10-osaka2012-yoccola-island.jpg&quot; alt=&quot;숙소 사진들&quot;&gt;&lt;/p&gt;

&lt;p&gt;숙소에 들어갔을 때, 주인은 운영하는 바에서 근무하던 중이라서 운영을 도와주는 다른 분께서 안내를 도와주셨다. 숙소 내부는 가정집을 개조한 형태였는데, 일본 여행을 왔었지만 실제로 다다미가 깔려있는 방에서 묵을 생각에 굉장히 설렜다. 1층에는 공용으로 이용할 수 있는 컴퓨터와 냉장고가 있었고, 좁은 복도를 따라 2층으로 올라가면 방들이 모여있는 복도가 나왔다. 안내를 해 주시는 분이 집 비밀번호와 방 비밀번호가 적힌 종이를 주셨다. 방에 들어가고 나서는 짐을 풀고 다시 나갈 준비를 했다. 계획상으로는 오늘 덴덴타운에 가서 구경과 쇼핑을 하려고 했지만, 이미 7시가 넘어버린 터라 대부분의 상점이 문을 닫을 때여서 저녁을 먹은 다음 야경 구경을 가기로 했다. &lt;/p&gt;

&lt;p&gt;저녁을 먹으러 츠루하시역 근처의 번화가로 향했다.  이후 일정이 밀리는 것을 감수하고서라도 숙소와 약간 떨어진 곳으로 간 이유는, 바로 &amp;#39;츠루하시 후게츠&amp;#39; 의 본점에 가기 위해서였다. 한국에도 명동과 홍대에 분점이 있는 츠루하시 후게츠는 정통 오사카 오꼬노미야끼를 하는 식당으로 유명한데, 마침 오사카에 들렀겠다 본점에 가서 한번 먹어보고 싶다는 생각이 들어서이다.&lt;/p&gt;

&lt;h3&gt;본점에서 먹는 오사카 정통 오꼬노미야끼&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/2013-10-10-osaka2012-tsuruhashi-station.jpg&quot; alt=&quot;츠루하시역&quot;&gt;&lt;/p&gt;

&lt;p&gt;츠루하시역에 도착하고나서, 다음날 여정을 위해 &lt;a href=&quot;http://www.osaka-info.jp/osp/kr/&quot;&gt;오사카 주유패스&lt;/a&gt;를 구매해야한다는 생각이 나서 역사(驛舍) 내의 안내소를 찾았다. 주유패스를 구매하는 방법에 대해서 물어보니, 오사카 지하철 무제한 이용권이 포함되어서인지 일반적인 JR역에서는 판매하지 않는다고 했다. 마침 숙소가 있는 역인 신이마미야역이 오사카 환승역이었기에, 숙소로 돌아가는 길에 구입하기로 하였다.&lt;/p&gt;

&lt;p&gt;츠루하시 근처의 번화가는 한국 드라마에 관련된 물건과 음식점, 다양한 종류의 파칭코 가게로 가득했다. 이전에 도쿄에 갔을 때도 파칭코 가게를 보긴 했지만, 이곳은 일반적인 게임기가 있는 아케이드와 파칭코를 같이 운영하는 것이 아닌, 파칭코만 두고 운영을 하는 곳이 대부분이었다. 연예인의 이름을 달고 나온 파칭코 기계부터 시작해서, 만화나 애니메이션 캐릭터가 그려져 있는 파칭코까지 정말 다양한 종류가 있었는데, 그런 파칭코 앞에 앉아서 대부분 무표정으로 레버를 돌리는 사람들을 보니 묘하게 안쓰러운 마음도 들었다.&lt;/p&gt;

&lt;p&gt;마침네 츠루하시 후게츠 본점에 도착할 수 있었는데, 역사에서 떨어져 있는데다가 후미진 골목의 구석에 있어서, 근처를 몇 번 돌고서야 발견할 수 있었다. 자리에 앉자마자 점원이 일본어로 된 메뉴판을 가져오길래, 한국어로 된 메뉴판이 있냐고 물어보니 바로 가져다 주었다. 나중에도 이야기하겠지만 어느 정도 규모가 있는 일본의 식당들은 한국어 메뉴판을 구비해놓는 경우가 많았는데, 단순히 음식 사진만을 보고 결정하는 것보다 큰 도움이 되었다. 오꼬노미야끼는 1인분 단위로 주문이 가능했는데, 새우 오꼬노미야끼와 야끼소바를 각각 주문하였다. &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2013-10-10-osaka2012-okonomiyaki.jpg&quot; alt=&quot;오꼬노미야끼와 야끼소바&quot;&gt;&lt;/p&gt;

&lt;p&gt;한국에서 가 보았던 오꼬노미야끼 음식점들은 조리를 완료해서 음식을 가져오는데, 츠루하시 후게츠는 식탁에 철판이 있어서 종업원이 직접 와서 오꼬노미야끼를 만들어주었다. 야채와 메인 재료(우리의 경우에는 새우)를 계란과 섞은 후, 그 위에 가쓰오부시를 얹고 굽기 시작하다가 야끼 소스를 얹고 조금 더 구우니 오꼬노미야끼가 완성되었다. 한국에서 먹었던 오꼬노미야끼보다 조금 더 맛이 깊었는데, 아마도 다른 야끼소스를 사용한 것 같았다. 다음으로 먹었던 야끼소바는 어느 정도 양념이 되고 익혀진 면을 가져와서 철판에 놓아주었는데, 오꼬노미야끼만큼이나 맛있었다.&lt;/p&gt;

&lt;h3&gt;코스모타워에서 야경을&lt;/h3&gt;

&lt;p&gt;저녁을 먹고 나오니 시간도 9시를 넘어가고, 하늘도 깜깜해졌다. 코스모타워에서 야경을 구경하려고 다시 지하철을 탔다. 몇 번의 환승 끝에 &lt;strong&gt;&lt;a href=&quot;http://kensaku.kotsu.city.osaka.lg.jp/subway/dia/rosen/roseneki2_1.html&quot;&gt;난코 포트 타운 선(뉴 트램)&lt;/a&gt;&lt;/strong&gt;이라는 이름의 경전철을 타게 되었는데, 섬으로 들어가는 구간부터 섬 내부의 고층 건물들을 지나가는 것까지 도쿄에서 탔던 &lt;a href=&quot;http://www.yurikamome.co.jp/ko/&quot;&gt;유리카모메&lt;/a&gt;와 비슷하게 느껴졌다.&lt;/p&gt;

&lt;p&gt;트레이드 센터 역에 도착해서 코스모타워로 걸어 가 보니, 매표소 앞에 입장은 9시 30분까지라는 푯말이 붙은 채 문이 굳게 닫혀있었다. 야경을 볼 수 있는 명소이니 꽤 오래 열 것이라는 생각을 하면서 가서 크게 당황했지만, 여행에 참고했던 블로그에서 &lt;a href=&quot;http://ryunan9903.egloos.com/4209700&quot;&gt;전망대에 올라가지 않고도 야경을 볼 수 있는 장소가 있다는 글&lt;/a&gt;을 읽어서 한번 올라가 보았다. 비즈니스 타워인만큼 중간 층들은 사무실이었는데, 전부 닫힌 상태라 불도 꺼져있고 으스스했다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2013-10-10-osaka2012-cosmotower-aisle.jpg&quot; alt=&quot;코스모타워의 으스스했던 복도&quot;&gt;&lt;/p&gt;

&lt;p&gt;49층은 전망을 보러 온 관광객들을 위한 식당이 있는 식당가였는데, 블로그 포스트에서 본 대로 복도를 따라 쭉 가보니 남자화장실 옆에 야경이 보이는 창문이 있었다. 500엔을 내고 들어갈 수 있는 55층 전망대의 야경이 얼마나 좋은 지는 모르겠지만, 이 곳에서 보았던 야경도 충분히 멋졌다. &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2013-10-10-osaka2012-cosmotower-vista.jpg&quot; alt=&quot;코스모타워에서 내려다본 오사카의 야경&quot;&gt;&lt;/p&gt;

&lt;p&gt;야경 구경을 마치고 숙소로 돌아가는 길에, 숙소 근처 역인 신이마미야역에서 주유패스를 샀다. 전철이 운행하는 시간이어서인지 늦은 시간까지 사람이 있었는데, 역을 관리하는 사무실을 &amp;#39;역장실&amp;#39; 이라고 부르는 것이 인상적이었다.&lt;/p&gt;

&lt;h3&gt;숙소 도착, 그리고...&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/2013-10-10-osaka2012-convini-foods.jpg&quot; alt=&quot;편의점에서 산 요깃거리들&quot;&gt;&lt;/p&gt;

&lt;p&gt;편의점에 들러 요깃거리를 조금 사서 숙소로 왔다. 다음날도 아침 일찍 나서야 했지만, 일본 여행의 묘미는 편의점 탐방이 아니던가. 관광지를 여럿 돌아다니다 보면 꽤 오랫동안 걷다 보니, 배가 고파져서 더욱 맛이 있게 느껴지는 것 같다. 이 날 먹었던 편의점표 메론빵과 바움쿠헨이 얼마나 맛있던지.&lt;/p&gt;

&lt;p&gt;음식 보관 측면에서는 airbnb를 이용할 때 호텔보다는 아쉬운 감이 있다. 샌프란시스코에서 묵을 때는 나 혼자 묵다보니 냉장고 이용 등이 그렇게까지 불편하진 않았는데, 이번에는 한 층을 내려가야 냉장고를 이용할 수 있기도 하고 다른 사람의 물건과 헷갈리지 않게 표시를 해 두어야 해서 약간 불편하게 느껴졌다. 또한 1층에 있는 공용 샤워실은 1인용이다보니, 샤워실을 이용하려는 다른 투숙객들이 많을 때는 꽤 오래 기다려야 했다. 다행히 변기는 각 방마다 마련되어 있어서 그렇게까지 불편하지는 않았다.&lt;/p&gt;

&lt;p&gt;숙소가 다다미방이다보니 이불을 깔아야 했는데, 저렴한 가격에도 불구하고 방이 넓어서 두 명이 잘만한 충분한 공간을 확보할 수 있었다. 카메라를 비롯한 전자기기들을 콘센트에 꽂아 두고, 오사카에서의 첫날을 마무리하며 잠자리에 들었다. &lt;/p&gt;

&lt;h3&gt;이전 여행기 보기&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;/travel/osaka-2012.html&quot;&gt;OSAKA 2012 - 준비&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
				<pubDate>Thu, 10 Oct 2013 23:00:00 +0900</pubDate>
				<link>http://si.mpli.st/travel/osaka-2012-day-1.html</link>
				<guid isPermaLink="true">http://si.mpli.st/travel/osaka-2012-day-1.html</guid>
			</item>
			
		
			
			<item>
				<title>OSAKA 2012 - 준비</title>
				<description>&lt;h3&gt;즐길 수 있는 여행&lt;/h3&gt;

&lt;p&gt;여러 가지 사정으로 인해 해외로 많이 나가긴 했지만, 즐길 수 있는 여행을 떠난 적은 적었다. TechCrunch Tokyo나 Google I/O 등 컨퍼런스에 자주 참여를 했는데, 여행 경비의 한계와 쉴 틈이 없는 컨퍼런스 스케쥴 때문에 여러 곳을 돌아다닐 기회가 없었다. 더군다나 학기 중에 시간을 내어 다녀오는터라 갈 때도 올 때도 피곤하게 돌아오기 마련이었다. 다음 번 여행을 갈 때는 아무런 일정이 없이 즐길 수 있는 여행을 떠나고 싶다는 생각을 하던 중에 대학 합격자 발표가 났고, 합격한 내 입장에서는 여행을 가기 딱 좋은 시기라는 생각이 들었다. 입시나 외주작업, 소프트웨어 마에스트로에서의 갈등을 포함한 여러 가지 힘든 일이 겹쳤었던터라 어디론가 도망가고 싶었다. 게다가 남들이 수능을 볼 때 휴일을 얻은 셈이므로 따로 휴일을 찾을 필요가 없이 여행 계획을 세울 수도 있었다.&lt;/p&gt;

&lt;p&gt;여행을 가겠다는 결심을 세우고 나니 고민했던 많은 문제들이 해결되기 시작했다. 우선 행선지는 금전적 부담이 심하지 않은 일본이 눈에 들어왔다. 이전에 도쿄를 가 본 기억으로 생각 해 보아도, 우리와 비슷하면서도 흥미로운 문화가 있는 매력적인 곳이었기 때문에 더더욱 다시 가 보고 싶었다. 같은 곳을 다시 가는 것 보다는 새로운 지방을 가는 것이 좋을 것 같아, 볼거리와 먹을거리가 많고 비행기 비용이 저렴한 오사카로 결정했다.&lt;/p&gt;

&lt;h3&gt;준비&lt;/h3&gt;

&lt;p&gt;항공편을 어떻게 해결할지 가장 고민했었는데, 마침 인터파크에 저가형 항공사 중 하나인 이스타항공의 땡처리 항공권이 떠서 해결할 수 있었다. 급하게 잡았는데도 인당 22만원에 항공권을 해결해서 금전적 부담을 덜 수 있었다. 그동안 국적기나 전일본공수(ANA), 싱가포르항공 같은 일반 항공사만 이용하다가 처음 저가항공사를 이용하게 되어서 불안하기도 했지만, 한국 저가항공사는 일반 항공사 못지않게 친절하다고 하여 별다른 걱정은 하지 않았다.&lt;/p&gt;

&lt;p&gt;2012년 Google I/O에 참가할 때 airbnb 숙소를 이용한 적이 있었는데, 일반적인 호텔에 묵는 것 보다 새로운 경험을 할 수 있어서 마음에 들었던 적이 있다. 그래서 이번에도 airbnb를 이용하여 숙소를 잡아보기로 하였는데, 저렴한 다다미방 숙소를 비롯한 여러 곳을 찾게 되었다. 각 숙소의 주인장에게 숙박 신청을 했는데, 맨 처음 발견한 다다미방 숙소의 주인이 가장 먼저 숙박을 허가해주어서 그쪽으로 결정하게 되었다. 일본의 전형적인 잠자리를 체험 해 볼 수 있다는 것과 더불어, 주인장이 직접 운영하고 있다는 바(Bar)가 있다고 해서 더욱 흥미로웠다.&lt;/p&gt;

&lt;p&gt;샌프란시스코에 갔을 때 비행기 이륙 2시간 전에 숙소에서 일어나서 호텔 체크인도 놓치고 국제미아가 될 뻔 했는데, 그 때 일행이 있었더라면 아침에 일어나서 일정에 맞게 이동할 수 있었을 것이라는 생각이 들었다. 이번에는 다행히 일본 여행을 계획하고 있고 일정이 맞는 분이 주변에 있어서, 같이 여행을 떠나기로 했다.&lt;/p&gt;

&lt;p&gt;갑자기 정해지긴 했지만, 그동안 힘들었던 일들을 잊을 수 있는 여행다운 여행이 시작되었다.&lt;/p&gt;
</description>
				<pubDate>Thu, 03 Oct 2013 18:35:00 +0900</pubDate>
				<link>http://si.mpli.st/travel/osaka-2012.html</link>
				<guid isPermaLink="true">http://si.mpli.st/travel/osaka-2012.html</guid>
			</item>
			
		
			
			<item>
				<title>Spotify vs Google Play Music All Access</title>
				<description>&lt;p&gt;&lt;img src=&quot;/images/2013-08-02-spotify-vs-google-music-all-access.png&quot; alt=&quot;두 서비스의 Android 앱&quot;&gt;&lt;/p&gt;

&lt;p&gt;한국에도 여러 음악 스트리밍 서비스들이 있지만, 음악 라이브러리의 규모가 크고 편의성이 뛰어난 &lt;a href=&quot;https://www.spotify.com/uk/&quot;&gt;Spotify&lt;/a&gt;를 사용하고 있다. 그러다가 Google I/O 2013에서 구글이 Play Music All Access를 &lt;a href=&quot;http://www.theverge.com/2013/5/15/4333464/google-takes-on-spotify-with-google-play-music-all-access&quot;&gt;발표&lt;/a&gt;하였는데, Rdio와 Spotify를 다분히 노린 서비스라서 어떤 차이점이 있는지 궁금해졌다. 최근 안드로이드를 만져보다가 Play Music 생각이 났고, 직접 사용해 보았다. 두 서비스를 모두 사용해본 입장에서 나의 경험을 공유해본다.&lt;/p&gt;

&lt;h3&gt;가격&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Spotify&lt;/strong&gt;에는 여러 가지 옵션이 있다. Free, Unlimited, Premium이 있는데, 모바일 애플리케이션을 사용하거나 계정에 등록된 국가 외에서 계속 들으려면 &lt;strong&gt;한 달에 $9.99&lt;/strong&gt;(영국의 경우 £9.99)를 지불하는 Premium 플랜을 반드시 사용해야 한다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Google Play Music All Access&lt;/strong&gt;는 음악을 무제한으로 들을 수 있는 All Access 플랜이 있는데, Spotify와 동일하게 &lt;strong&gt;한 달에 $9.99&lt;/strong&gt;이다. 아무래도 Spotify의 가격 정책을 의식하여 책정된 가격같다.&lt;/p&gt;

&lt;h3&gt;애플리케이션&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Spotify&lt;/strong&gt;는 iOS, Android, Windows Phone 등 모바일과 웹 애플리케이션, 그리고 Windows/Mac용 데스크탑을 지원한다. 이들 애플리케이션들의 완성도는 상당한 수준인데, iOS의 경우 iOS 자체의 Music 앱보다도 편리하고 안정적이었다. 또한 데스크탑 및 모바일 애플리케이션에서 오프라인 캐싱 기능을 지원하여, 데이터 소비나 버퍼링 없이 음악 감상이 가능하다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Google Play Music All Access&lt;/strong&gt;는 Android와 웹 애플리케이션을 지원한다. &lt;a href=&quot;http://www.theverge.com/2013/5/30/4379862/google-play-music-all-access-coming-to-ios&quot;&gt;관계자에 따르면&lt;/a&gt; iOS용이 출시될 예정이라고 하지만, 서비스 출시 3개월 이후에도 출시가 되지 않는 것을 보면 앞으로 출시될 것이라고 확신은 할 수 없을 것 같다. 결국 현재 상황만 놓고 본다면 구글의 플랫폼을 사용하는 사람에게만 매력적일 수 밖에 없는 셈이다. 웹 애플리케이션의 완성도는 나름 괜찮으며, Spotify와 동일하게 모바일에서 오프라인 캐싱 기능을 지원한다.&lt;/p&gt;

&lt;h3&gt;음악 라이브러리&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/2013-08-02-search-result.png&quot; alt=&quot;검색 결과&quot;&gt;&lt;/p&gt;

&lt;p&gt;두 서비스가 출시한 국가가 비슷한 현재 시점에서는 라이브러리 상의 차이는 거의 없다. 다만 정규 앨범 이외에 리믹스나 Extended Mix가 포함된 싱글은 Google Play Music All Access에 없는 경우가 많았고, 일부 지역 한정 음반도 Spotify가 대체적으로 더 많이 보유하고 있는 듯 하다. 다만 구글 코리아에서 음악 파트너쉽 관련 &lt;a href=&quot;https://www.google.com/about/jobs/search/#!t=jo&amp;amp;jid=2990001&quot;&gt;채용 공고&lt;/a&gt;를 낸 것이 최근에 포착되었는데, Google Play Music All Access 쪽이 그나마 한국 출시에 대한 희망이 있는 상태이다. (Spotify도 &lt;a href=&quot;http://blogs.wsj.com/digits/2013/04/16/spotify-expands-into-eight-new-markets/&quot;&gt;확장 계획&lt;/a&gt;이 있으나, 한국은 계획에 없는 듯 하다)&lt;/p&gt;

&lt;h3&gt;기존 라이브러리와의 연동&lt;/h3&gt;

&lt;p&gt;많은 사람들이 아직도 음원을 구입하고 관리하는데, 두 서비스 모두 기존에 소유한 음원 라이브러리와의 연동 기능이 있다.&lt;/p&gt;

&lt;p&gt;먼저 &lt;strong&gt;Spotify&lt;/strong&gt;는 상당히 특이한 방식을 채택하였다. 먼저 자신이 가진 음악을 데스크탑 Spotify 애플리케이션에 추가하면, 스트리밍 음악과 비슷하게 취급되어 플레이리스트 생성도 가능하고 애플리케이션 내 재생도 가능하다. 모바일 기기가 데스크탑 Spotify 애플리케이션이 실행된 컴퓨터와 같은 네트워크에 있는 경우 &lt;em&gt;동기화&lt;/em&gt;가 가능한데, 이 경우 컴퓨터에서 모바일 기기로 직접 음원이 전송된다. 이렇게 전송된 음원은 모바일에서 그대로 재생할 수 있지만, 웹 애플리케이션에서는 들을 수 없다.&lt;/p&gt;

&lt;p&gt;반면 &lt;strong&gt;Google Play Music All Access&lt;/strong&gt;는 Google Music의 시스템을 이어받았다. 폴더 전체를 동기화하거나 iTunes같은 음악 라이브러리를 선택하면, 해당 라이브러리에 있는 모든 파일들이 클라우드에 저장되는 방식이다. 이후 Google Play Music에서 검색어를 입력하면 All Access와 업로드한 음원 모두를 검색해준다.&lt;/p&gt;

&lt;h3&gt;라디오&lt;/h3&gt;

&lt;p&gt;라디오는 곡을 선택하면 그와 비슷한 성격의 음악을 찾아서 재생해 주는 기능이다. Pandora와 Rdio같은 다른 서비스들와 마찬가지로 두 서비스도 라디오 기능을 가지고 있다.&lt;/p&gt;

&lt;p&gt;맞춤형 라디오의 시작을 연 &lt;strong&gt;Spotify&lt;/strong&gt;는 그 명성에 맞게 라디오 기능이 상당히 발전되어 있다. 라디오의 기본적인 기능인 추천의 품질이 대단한데, 이 라디오 기능으로만 많은 아티스트들을 알게 되었을 정도로 많이 사용하고 있다. 유명하지 않은 아티스트의 곡도 많이 매칭해주는 편이다. 한 가지 아쉬운 점이라면 라디오를 시작하면 바로 비슷한 곡으로 넘어간다는 것인데, 특정 곡이 끝나지 않았는데도 넘어가서 가끔씩 불편할 때가 있다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Google Play Music All Access&lt;/strong&gt;는 방대한 정보를 기반으로 후발주자의 약점을 뛰어넘으려 노력했다. 하지만 라디오로 매칭되는 곡들의 폭이 좁은데, 아직까지 사용자들의 정보가 쌓이지 않아 &lt;em&gt;안전한 선택&lt;/em&gt; 위주로 가려는 느낌이 있다. 한 가지 신기한 점은 자신이 업로드한 음원 라이브러리의 곡도 라디오가 추천해준다는 점인데, 아티스트나 앨범 이름, 장르 등을 통해 연관성을 유추하는 것 같다. Spotify와 다르게 특정 곡에서 라디오를 시작하면 그 곡이 끝난 다음 라디오에서 선정한 다음 곡이 재생되며, 라디오 플레이리스트의 순서도 바꾸거나 삭제할 수 있는 등 라디오 도중 사용자의 조작이 자유롭다는 점이다. &lt;/p&gt;

&lt;h3&gt;추천 기능&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/2013-08-02-discover-vs-listen-now.jpg&quot; alt=&quot;두 서비스의 추천 기능&quot;&gt;&lt;/p&gt;

&lt;p&gt;Spotify와 Google Play Music All Access 각각 &lt;strong&gt;Discover&lt;/strong&gt;와 &lt;strong&gt;Listen Now&lt;/strong&gt;라는 추천 기능을 가지고 있다. 두 서비스 모두 카드형 인터페이스로 사용자가 좋아할 것 같은 아티스트와 앨범, 곡들을 보여주는데, 추천의 품질은 Spotify가 월등히 좋다. Beatport에서 취향이 맞는 아티스트를 찾아 iTunes에서 듣고 있었는데, 나의 취향을 분석해서 Discover에 해당 아티스트를 추천한다는 카드가 떴을때는 깜짝 놀랐다.&lt;/p&gt;

&lt;h3&gt;마치며&lt;/h3&gt;

&lt;p&gt;Spotify와 Google Play Music All Access는 비슷한 성격의 서비스이지만, 서비스를 늦게 시작한 Google Play Music All Access쪽이 완성도 측면에서 아직은 갈 길이 먼 것 같다. 하지만 한국 채용 공고에서 알 수 있듯이 Spotify에 비해 Google이 서비스 확장에는 유리하니 앞으로 어떻게 될지는 모르는 셈이다. 또한 기존 음악도 쉽게 스트리밍해서 들을 수 있는 점에는 Google Play Music All Access에 점수를 주고 싶다.&lt;/p&gt;

&lt;p&gt;나의 경우에는, Android 외 모바일 제품군 지원에 대한 부재와 서비스 품질때문에 Spotify에 계속 머물러 있을 것 같다. &lt;/p&gt;
</description>
				<pubDate>Fri, 02 Aug 2013 02:00:00 +0900</pubDate>
				<link>http://si.mpli.st/review/spotify-vs-google-play-music-all-access.html</link>
				<guid isPermaLink="true">http://si.mpli.st/review/spotify-vs-google-play-music-all-access.html</guid>
			</item>
			
		
			
			<item>
				<title>블로그 다시 만들기</title>
				<description>&lt;p&gt;약 10개월동안 블로그를 방치했다. &lt;a href=&quot;https://www.facebook.com/photo.php?fbid=3768790105929&amp;amp;set=a.1372050988949.2050249.1461991545&quot;&gt;고등학교를 졸업&lt;/a&gt;하고, &lt;a href=&quot;http://followmyfootprint.in/&quot;&gt;일본 여행&lt;/a&gt;을 다녀오고, &lt;a href=&quot;http://kr.linkedin.com/in/premist&quot;&gt;Shakr Media에 합류&lt;/a&gt;하는 등 많은 일이 생겨서 정신이 없었던 것도 있지만, 지금 생각해보면 무언가 해야 한다는 막연한 생각만 하고 글감으로 발전시킬 생각을 하지 않았다. 몇 년에 걸쳐 트위터의 140자 제한에 익숙해지다보니 어쩌다 쓰게 되는 글도 대부분 단편적인 생각을 다루는 데에서 끝났다.&lt;/p&gt;

&lt;p&gt;마지막 글을 쓰고 나서 몇 개월이 지나고, 우연한 계기로 블로그를 다시 보게 되었다. si.mpli.st를 WordPress에서 Rails로 이전할 때 만든 디자인은 이제 촌스러워 보였고, 글 에디터에 신경을 쓰지 않다 보니 글을 쓰는 과정은 고통스러웠다. 몇일간 고심한 이후, 블로그를 다시 만들기 시작했다.&lt;/p&gt;

&lt;h3&gt;데이터 이전&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;코멘트 시스템 등이 필요 없는 블로그를 왜 Rails와 같은 무거운 프레임워크 위에서 돌려야 할까?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;si.mpli.st를 고쳐야겠다는 생각을 한 이후로 가장 먼저 엔진을 바꾸기로 결정하였다. 아무리 내가 제작하였다고는 하지만 편의성이라고는 하나도 없었고, 어느 환경에서나 쉽게 구동할 수 있는 &lt;strong&gt;정적인 블로깅 툴&lt;/strong&gt;이 눈에 띄었다. &lt;a href=&quot;http://octopress.org/&quot;&gt;Octopress&lt;/a&gt;와 같은 블로깅에 최적화된 도구도 있었지만, 그러한 도구들의 기반이 된 &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;을 사용하기로 하였다.&lt;/p&gt;

&lt;p&gt;다행히도 기존 si.mpli.st 의 글들은 Markdown을 이용하여 쓰고 있었기 때문에 별다른 절차가 필요 없었지만, 이전에 WordPress를 사용하여 쓴 글들은 XML 방식의 WordPress 백업 파일 형태로 남아 있었기 때문에 바로 활용이 힘들어보였다. Jekyll을 이용한 마이그레이션 도구들이 꽤 있었지만, 제대로 작동하는 것은 없었기 때문에  &lt;a href=&quot;https://gist.github.com/premist/5942593&quot;&gt;WordPress 백업 파일을 Markdown 파일로 바꿔주는 도구&lt;/a&gt;를 직접 만들었다.&lt;/p&gt;

&lt;p&gt;WordPress 글들을 Markdown으로 변환한 이후 깨진 HTML 코드를 손보았고, Jekyll이 메타데이터를 읽을 수 있도록 파일의 앞부분에 카테고리와 같은 데이터를 추가해 주었다.&lt;/p&gt;

&lt;h3&gt;폰트&lt;/h3&gt;

&lt;p&gt;이전에는 기본적인 블로그 시스템을 만드는 것에 너무 시간을 들여서, 마지막에 지쳐버려서 디자인에 집중할 수 없었다. 그래서 이번에는 기술적인 부분보다는 블로그의 외형을 생각하는데에 많은 시간을 할애하였다.&lt;/p&gt;

&lt;p&gt;블로그는 기본적으로 글을 쓰는 공간이기 때문에 부담되지 않는 색상과 글자의 가독성을 최우선적으로 생각하면서 목업을 만들기 시작했다. 이것이 첫 번째 목업의 결과물이다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2013-07-07-design-candidate-1.png&quot; alt=&quot;첫 번째 목업&quot;&gt;&lt;/p&gt;

&lt;p&gt;워드프레스를 사용했을 때 si.mpli.st에 Myriad Pro를 사용했는데, 색다른 폰트를 사용해보자 해서 선택한 것이 &lt;a href=&quot;http://bit.ly/10HfDgU&quot;&gt;Futura PT&lt;/a&gt;이다. Ableton이 &lt;a href=&quot;https://www.ableton.com/&quot;&gt;웹사이트&lt;/a&gt;를 리뉴얼한 것을 보면서 Futura PT가 매우 세련된 폰트라는 것을 다시 한 번 깨달았고, 결국 si.mpli.st에도 적용하게 되었다. 사실 webOS에 적용된 Prelude의 원조격인 Avenir Next를 쓰고 싶었지만, 아쉽게도 Typekit 라이브러리에 있지 않아 Futura를 사용하게 된 것도 있다.&lt;/p&gt;

&lt;h3&gt;색상&lt;/h3&gt;

&lt;p&gt;디자인을 이리저리 바꿔보면서 몇 가지 아이디어가 떠올랐는데, 그 중 하나가 &lt;strong&gt;카테고리별로 색상을 정해주는 것은 어떨까&lt;/strong&gt; 라는 생각이었다. 먼저 블로그에 있는 글을 몇 가지 카테고리를 정해 분류하고, 각 카테고리마다 어울리는 색상을 정해주는 것인데, 블로그가 너무 단조로워 보이지 않도록 하는 효과에 더불어 글의 성격을 표현해주는 요소로 작용할 수 있을 것 같았다. 색상을 주 요소로 활용하게 된다면 팔레트를 선정하는 것이 매우 중요해지는데, 직접 색상을 고르는 대신 Designmodo의 &lt;a href=&quot;http://designmodo.github.com/Flat-UI/&quot;&gt;Flat UI&lt;/a&gt; 에서 색을 가져왔다. &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2013-07-07-color-scheme.png&quot; alt=&quot;color scheme&quot;&gt;&lt;/p&gt;

&lt;p&gt;카테고리에 맞는 색을 나름 고른다고 했는데, 카테고리가 더 추가되면 어떻게 할 지도 생각 해 보아야 할 것 같다.&lt;/p&gt;

&lt;p&gt;이렇게 블로그 리뉴얼이 끝나고, 최종적으로 지금과 같은 디자인이 되었다. 이전보다 글 하나를 읽을 때 집중해서 볼 수 있다는 점이 매우 맘에 들고, 정적 블로그로 바꾸면서 GitHub에서 &lt;a href=&quot;http://github.com/premist/si.mpli.st&quot;&gt;블로그 소스&lt;/a&gt;를 관리할 수 있어서 데이터 유실의 위험도 없어졌다. 이제 귀찮음만 이겨내면 다시 활발한 글쓰기를 할 수 있을 듯. &lt;/p&gt;
</description>
				<pubDate>Mon, 08 Jul 2013 01:01:00 +0900</pubDate>
				<link>http://si.mpli.st/life/remaking-blog.html</link>
				<guid isPermaLink="true">http://si.mpli.st/life/remaking-blog.html</guid>
			</item>
			
		
			
			<item>
				<title>데이터, 데이터, 데이터</title>
				<description>&lt;p&gt;최근 데이터 유실을 많이 겪었다. 서버 호스팅의 기간 만료를 깜박하고 데이터를 백업하지 않았는데, 백업본을 워낙 많이 만들어뒀으니 괜찮다고 생각했다.&lt;/p&gt;

&lt;p&gt;어느 날은 그 서버에 있던 데이터 중 일부가 필요해서, 서버를 열심히 뒤적거리기 시작했다. OS X Spotlight의 도움을 받아 몇 개는 찾았지만, 일부 파일을 찾을 수 없었다. 하지만 &amp;quot;내가 몇중 백업을 했는데!&amp;quot; 라는 생각도 들고 해서 다른 곳을 뒤지기 시작했다.&lt;/p&gt;

&lt;p&gt;다른 서버에 접속하려 하니 &lt;strong&gt;얼마 전 게이밍 PC로 쓰려고 데이터를 날린&lt;/strong&gt; 기억이 났고, &lt;a href=&quot;http://si.mpli.st/posts/macbook-air-sinhyeong-gumae&quot;&gt;노트북을 새로 사서&lt;/a&gt; 로컬에는 데이터가 전혀 없었다. 기존에 사용하던 맥북 프로는 서버로 사용하기 위해 Mountain Lion을 클린 설치한 상태라 데이터가 남아있을&lt;strong&gt;리 없었&lt;/strong&gt;고, 최후의 백업 장소였던 외장하드는 이전에 누군가가 떨어뜨려 교환을 받은 상태였다.&lt;/p&gt;

&lt;p&gt;멘붕이 시작되었다. 일본이나 싱가폴, 미국 등지에서 발표했던 발표 자료도 완전히 날아갔고, 디자인 시안파일도 찾을 수 없었다. 심지어 이전까지 운영하던 &lt;a href=&quot;http://premist.typepad.com/blog/2010/01/%EB%B0%94%EC%82%AD%EB%B0%94%EC%82%AD-%EB%B8%94%EB%A1%9C%EA%B7%B8-%ED%81%AC%EB%9E%98%EC%BB%A4-%EC%84%9C%EB%B9%84%EC%8A%A4-%EB%9F%B0%EC%B9%AD-%EC%A4%80%EB%B9%84.html&quot;&gt;크래커&lt;/a&gt;의 자료도 전부 찾을 수 없었다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;모든 것을 한 곳에 모아놓으면 찾을 필요도 없겠지&lt;/strong&gt;라는 생각을 하고 데이터 관리에 소홀했던 탓이다. 이런 사건을 겪으니 앞으로 데이터 관리를 더 잘 해야겠다는 생각이 들었고, 나 스스로 관리하기에는 한계가 있을 것 같아서 외부 클라우드에도 저장소를 둘까 생각중이다. 아, 하늘이 무너지는 느낌이다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;업데이트 :&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2012-08-17-backup.png&quot; alt=&quot;하드 백업본&quot;&gt;&lt;/p&gt;

&lt;p&gt;불행 중 천만다행으로, 이전에 하드 전체를 덤프 해 두었던 백업 파일을 찾을 수 있었다! 컴퓨터를 바꿀 때마다 항상 버릴까 말까 하던 파일이었는데, 이 파일에서 대부분의 자료를 복구할 수 있었다. 정말 다행이다. 역시 백업은 몇 번을 해도 아깝지 않다.&lt;/p&gt;
</description>
				<pubDate>Sat, 18 Aug 2012 02:52:58 +0900</pubDate>
				<link>http://si.mpli.st/life/data-data-data.html</link>
				<guid isPermaLink="true">http://si.mpli.st/life/data-data-data.html</guid>
			</item>
			
		
			
			<item>
				<title>Font book - Smart Collection</title>
				<description>&lt;p&gt;&lt;img src=&quot;/images/2012-08-13-font-book-1.png&quot; alt=&quot;Smart Collection&quot;&gt;&lt;/p&gt;

&lt;p&gt;OS X Mountain Lion의 Font Book(서체 관리자)에 Smart Collection이라는 기능이 추가되었다.  iTunes의 &lt;a href=&quot;http://support.apple.com/kb/HT1801?viewlocale=ko_KR&quot;&gt;스마트 재생 목록&lt;/a&gt;과 유사한 기능으로, 여러 가지 필터를 설정하면 폰트를 자동으로 묶어 주는 기능이다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2012-08-13-font-book-2.png&quot; alt=&quot;Smart Collection 2&quot;&gt;&lt;/p&gt;

&lt;p&gt;필요하다고 생각했던 기능이라 자주 쓰게 될 것 같다. 아마 이 기능을 기다려 오신 다른 분들도 많을 듯.&lt;/p&gt;
</description>
				<pubDate>Fri, 03 Aug 2012 19:01:54 +0900</pubDate>
				<link>http://si.mpli.st/think/font-book-smart-collection.html</link>
				<guid isPermaLink="true">http://si.mpli.st/think/font-book-smart-collection.html</guid>
			</item>
			
		
			
			<item>
				<title>OS X의 드래그</title>
				<description>&lt;p&gt;MacBook Pro를 쓸 때는 &lt;a href=&quot;http://support.apple.com/kb/PH4620&quot;&gt;드래그 잠금 기능&lt;/a&gt;을 이용해 드래그를 했다. 전부터 드래그 잠금만을 이용하여 드래그를 해와서 익숙하기도 했다.&lt;/p&gt;

&lt;p&gt;그러다 &lt;a href=&quot;http://si.mpli.st/posts/macbook-air-sinhyeong-gumae&quot;&gt;MacBook Air를 구매&lt;/a&gt;하면서 OS X를 통째로 갈아엎을 일이 생겼고, 그러다 설정 패널을 다시 보게 되었다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2012-07-18-osx-trackpad-settings.png&quot; alt=&quot;트랙패드 설정&quot;&gt;&lt;/p&gt;

&lt;p&gt;다른 사람들이 입이 마르도록 칭찬하는 세 손가락 드래그가 있길래 한번 써 보기로 했는데, 이게 은근히 편하다. 창 드래그도 되고, 심지어 Finder에서 아이콘을 드래그할 때도 제스쳐로 되니, 매번 손가락을 트랙패드에서 떨어지지 않도록 신경 쓸 필요도 없어졌다.&lt;/p&gt;

&lt;p&gt;항상 느끼는 것이지만 습관은 무섭다. &lt;/p&gt;
</description>
				<pubDate>Wed, 18 Jul 2012 21:57:55 +0900</pubDate>
				<link>http://si.mpli.st/think/osx-drag.html</link>
				<guid isPermaLink="true">http://si.mpli.st/think/osx-drag.html</guid>
			</item>
			
		
			
			<item>
				<title>Hacking Nexus Q</title>
				<description>&lt;p&gt;Nexus Q를 발표할 때, 사람들의 환호가 터져나온 순간은 바로 &amp;#39;Full Hackability&amp;#39; 를 발표했을 때였다. 과연 어떤 식으로 개발자 친화적인 사치품을 제작했을까 궁금했는데, &lt;a href=&quot;http://www.theverge.com/2012/6/28/3123155/google-nexus-q-games-hack&quot;&gt;24시간만에 앱을 구동할 수 있도록 해킹되었다&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;그 후 &lt;a href=&quot;http://forum.xda-developers.com/showthread.php?p=28484300&quot;&gt;부트로더 언락과 루팅, 런쳐 구동&lt;/a&gt;이 되더니, &lt;a href=&quot;http://droidcloudshare.blogspot.kr/&quot;&gt;Bluetooth HID 입력 장치를 페어링&lt;/a&gt; 할 수 있게 해킹되었다. 최근에는 넥서스 Q의 상단부를 이용한 Pong 게임까지 등장했다.&lt;/p&gt;

&lt;p&gt;TV도 없고 마냥 넥서스 Q를 방치하기에는 너무 아까운 하드웨어라고 생각하여, 해킹을 해보기로 마음먹었다. 하지만 안드로이드에 대한 지식이 없어서 혼자 막연히 시작할 수 없기에,  &lt;a href=&quot;http://twitter.com/devunt&quot;&gt;@devunt&lt;/a&gt; 님의 도움을 받았다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2012-07-16-nexus-q-about-page.jpg&quot; alt=&quot;Nexus Q About Page&quot;&gt;&lt;/p&gt;

&lt;p&gt;몇 분 안에 Nexus Q의 부트로더를 언락하고 슈퍼유저 권한을 취득할 수 있었고, ADB 쉘로 키입력을 하나하나 보내서(...) 정보 페이지를 열 수 있었다. 이후에는 Bluetooth HID 마우스를 연결하여 작업하였고, 오늘 드디어 이런 결과가 나왔다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2012-07-16-ubuntu-on-q.jpg&quot; alt=&quot;Ubuntu + NGINX on Nexus Q&quot;&gt;&lt;/p&gt;

&lt;p&gt;내가 집에 간 사이에 &lt;a href=&quot;http://twitter.com/devunt&quot;&gt;@devunt&lt;/a&gt;님이 Ubuntu를 Nexus Q에 올리고, 그것도 모자라 &lt;a href=&quot;http://nginx.org/&quot;&gt;NGINX 웹 서버&lt;/a&gt;까지 컴파일하여 설치 해 놓았다. 이제 서버로 쓰기만 하면..&lt;/p&gt;
</description>
				<pubDate>Tue, 17 Jul 2012 00:07:39 +0900</pubDate>
				<link>http://si.mpli.st/geek/hacking-nexus-q.html</link>
				<guid isPermaLink="true">http://si.mpli.st/geek/hacking-nexus-q.html</guid>
			</item>
			
		
			
			<item>
				<title>MacBook Air 신형 구매</title>
				<description>&lt;p&gt;&lt;img src=&quot;/images/2012-07-16-macbook-air.jpg&quot; alt=&quot;MacBook Air with MagSafe 2&quot;&gt;&lt;/p&gt;

&lt;p&gt;2012년형 MacBook Air를 구매하였다. 11인치에 CPU/RAM CTO. 기존에 사용하던 MacBook Pro를 대체하고도 남을 성능을 가진만큼, 오래오래 써줘야겠다.&lt;/p&gt;

&lt;p&gt;사실 자금 여유가 있었다면 &lt;a href=&quot;http://store.apple.com/kr/configure/MD104KH/A?&quot;&gt;케플러 그래픽카드가 탑재된 MacBook Pro 15&amp;quot;&lt;/a&gt;나 &lt;a href=&quot;http://store.apple.com/kr/configure/MC975KH/A?&quot;&gt;진리의 레티나&lt;/a&gt; 를 질렀겠지만, 그럴만한 여유는 없어서 무난하게 MacBook Air를 구매하였다. &lt;/p&gt;
</description>
				<pubDate>Mon, 16 Jul 2012 23:51:36 +0900</pubDate>
				<link>http://si.mpli.st/life/macbook-air-purchase.html</link>
				<guid isPermaLink="true">http://si.mpli.st/life/macbook-air-purchase.html</guid>
			</item>
			
		
			
			<item>
				<title>딜레마</title>
				<description>&lt;p&gt;앞으로 다가올 두 달은 지옥의 스케쥴과 함께 할 것 같다. &lt;a href=&quot;http://swmaestro.kr/&quot;&gt;소프트웨어 마에스트로&lt;/a&gt;에서 첫 번째로 하게 될 프로젝트의 난이도도 상당하고, 기존에 진행중이었던 프로젝트들에 참여하고 있는 다른 팀원들에게 해가 되지 않도록 일정을 미루어서는 안 된다. &lt;/p&gt;

&lt;p&gt;하지만 모든 프로젝트에 열정적으로 참여할 수는 없는 법. 어느 것 하나에는 소홀하게 될 텐데, 그 공백을 어떻게 채워야 할 지 벌써부터 고민이다.&lt;/p&gt;
</description>
				<pubDate>Mon, 16 Jul 2012 02:23:03 +0900</pubDate>
				<link>http://si.mpli.st/think/dilemma.html</link>
				<guid isPermaLink="true">http://si.mpli.st/think/dilemma.html</guid>
			</item>
			
		
			
		
			
			<item>
				<title>블로그 서버 이전</title>
				<description>&lt;p&gt;블로그 서버를 &lt;a href=&quot;http://windowsazure.com/&quot;&gt;Windows Azure&lt;/a&gt; 에서 &lt;a href=&quot;https://twitter.com/relipnamu&quot;&gt;@Relipnamu&lt;/a&gt;님 서버로 옮겼다.&lt;/p&gt;

&lt;p&gt;Windows Azure의 서비스에 장애가 있는 건 아니지만, 컴퓨팅 파워 10%정도 넘게 썼다고 $20정도의 금액이 나오는 것을 보고 경악하여 바로 해지했다. MSDN 구독자 혜택으로 쓰던 무료 한도가 굉장히 적어서 실제로 사용하긴 부족한 정도인 걸 알았으니, 앞으로는 쓰지 않을 예정이다. &lt;/p&gt;
</description>
				<pubDate>Tue, 10 Jul 2012 20:22:31 +0900</pubDate>
				<link>http://si.mpli.st/life/blog-server.html</link>
				<guid isPermaLink="true">http://si.mpli.st/life/blog-server.html</guid>
			</item>
			
		
			
			<item>
				<title>클라우드 의존성</title>
				<description>&lt;p&gt;최근 클라우드에 내가 얼마나 의존하고 있는지를 뼈저리게 느끼게 해준 사건이 터졌다.&lt;/p&gt;

&lt;p&gt;최근 iCloud를 사용하고 있는 나의 Apple ID의 비밀번호가 갑자기 바뀌었다. 비밀번호가 바뀔 일도 없었기에 계정 도용을 의심했고, Apple의 &lt;a href=&quot;https://iforgot.apple.com&quot;&gt;iForgot&lt;/a&gt; 사이트에 들어가 비밀번호를 바꾸려 했다.&lt;/p&gt;

&lt;p&gt;하지만 일은 뜻대로 되지 않았다. 최근 Apple과 iMessage 관련 상담을 하면서 보조 이메일 주소를 모두 제거한 상황이었고, 가입할 때 생년월일을 잘못 입력했는지 계속 생년월일이 틀렸다고 나왔다. 몇 번의 시도 끝에 결국 애플의 시스템은 나를 8시간동안 비밀번호 복구 시스템에서 차단시켰다.&lt;/p&gt;

&lt;p&gt;Apple의 표현을 비꼬아서 말해보면, &lt;strong&gt;이 곳에 있는 데이터가 저 곳에는 없고, 저 곳에서 만든 데이터가 이 곳에는 없었다&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;주말동안 꼼짝없이 iCloud와 Apple ID 관련 모든 서비스를 이용할 수 없었다. 메일, 사진 라이브러리(Photo Stream), 연락처, 캘린더와 같은 PIMS 서비스부터, iTunes Music Store, App Store와 같은 스토어 서비스까지 전부 접근할 수 없었고, 나는 혼란에 빠졌다.&lt;/p&gt;

&lt;p&gt;오늘부터 시작하는 &lt;a href=&quot;http://footprint.premi.st/&quot;&gt;Google I/O 2012 여행&lt;/a&gt; 때문에 airbnb와 같은 서비스로부터 메일을 받을 일도 많았고, 당장 App Store가 잠기니 앱 구매도 불가능했다. 구매했던 앱을 다시 다운로드 받을 수도 없었다. 다행히 iTunes Support 영업일인 월요일 아침에 이메일로 본인 확인을 한 후 계정을 되찾을 수 있었지만, 주말 이틀동안의 그 혼란스러움은 아직도 기억에 남는다. 클라우드를 떠나 개인 서버로 모두 옮기던지, 아니면 주기적으로 미러링을 해 두어야 안전할 것 같다는 불안감도 생겼다. (사실 미러링을 해 두어도 갱신되는 데이터나, 내 주소에 접근할 수 없다는 점은 동일하지만)&lt;/p&gt;

&lt;p&gt;최근 정말 많은 클라우드 서비스들이 앞다투어 생기고 있고, 하나같이 &amp;quot;우리의 안전성은 세계 제일!&amp;quot; 이라고 말하고 있다. 하지만 서비스 운영주체의 부주의가 전혀 없다고 해도 다른 위험들이 많다. 외부 공격자가 있을 가능성, 사용자의 부주의 등 변수는 굉장히 많고, 그 변수를 모두 대처할 수 없다는 것은 누구나 알 것이다. 클라우드의 편의성을 이용하는 것은 좋지만, 너무 의존하는 것도 그리 좋은 선택 같지는 않다.&lt;/p&gt;
</description>
				<pubDate>Tue, 26 Jun 2012 14:09:07 +0900</pubDate>
				<link>http://si.mpli.st/think/cloud-dependency.html</link>
				<guid isPermaLink="true">http://si.mpli.st/think/cloud-dependency.html</guid>
			</item>
			
		
			
			<item>
				<title>여행 준비, 그리고...</title>
				<description>&lt;p&gt;Google I/O 참여를 위해 미국으로 떠날 준비를 하는데, 이전에 쓰던 여행 저널인 &lt;a href=&quot;http://followmyfootprint.tumblr.com/&quot;&gt;followmyfootprint&lt;/a&gt;을 이번에도 운영해야겠다는 생각을 했다. 다만 최근에는 Google Latitude를 사용하지 않고 있고, &lt;a href=&quot;http://tumblr.com/&quot;&gt;Tumblr&lt;/a&gt; iPhone 앱의 이미지 업로드는 너무 느렸다. 사진이 압축되더라도 빠르게 업로드가 가능하고, 사진마다 지오태깅이 가능하도록 구축하고 싶었다.&lt;/p&gt;

&lt;p&gt;결국 새로운 사이트를 개발하여 사용하기에 이르렀다.&lt;/p&gt;

&lt;p&gt;웹에서 모든 기능을 사용하도록 구현하기 위하여, iOS6에 추가된 브라우저 내 업로드 덕분에 사진 업로드도 가능해졌고, HTML5 Geolocation API를 사용하여 지오태깅도 가능하게 하였다. &lt;/p&gt;

&lt;p&gt;하지만 사진 압축이나 안정성 등의 문제는 해결하지 못했고, 결국 &lt;a href=&quot;http://twitter.com/sin0ru/&quot;&gt;@sin0ru&lt;/a&gt; 아저씨에게 부탁하여 아이폰 어플리케이션을 제작하고 있다. 사진 촬영과 지오태깅 기능이 들어간 간단한 업로더도 구비된 셈이다.&lt;/p&gt;

&lt;p&gt;..뭐 그건 그거고, 다음주에 Google I/O 2012에 참가할 예정이다. 사진과 이야기를 공유할 &lt;strong&gt;followmyfootprint&lt;/strong&gt;는 완성이 되는 대로 링크를 공개할 예정이다.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;사족&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;사실 플랫폼화를 진행하려고 한 프로젝트인데 급작스럽게 시작하게 되었다. 여행 가기 전에 완성을 해야 해서 데드라인도 있는 상황이다. 끝낼 수 있을까...&lt;/p&gt;
&lt;/blockquote&gt;
</description>
				<pubDate>Fri, 22 Jun 2012 22:16:55 +0900</pubDate>
				<link>http://si.mpli.st/travel/preparing-google-io.html</link>
				<guid isPermaLink="true">http://si.mpli.st/travel/preparing-google-io.html</guid>
			</item>
			
		
			
		
			
		
			
		
			
			<item>
				<title>Google Analytics</title>
				<description>&lt;p&gt;&lt;a href=&quot;https://analytics.google.com/&quot;&gt;Google Analytics&lt;/a&gt;를 사용하면서도 구글의 트래킹 정책이 싫어서 사용을 자제하려고 했는데, 무료 솔루션을 찾지 못해 결국 잠시동안 설치 해 두기로 했다. 그런데 최근 추가된 &lt;strong&gt;실시간&lt;/strong&gt; 기능을 보면서 경악을 금치 못했다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2012-06-18-google-analytics.png&quot; alt=&quot;Google Analytics on my site&quot;&gt;&lt;/p&gt;

&lt;p&gt;무섭구나.&lt;/p&gt;
</description>
				<pubDate>Mon, 18 Jun 2012 23:01:02 +0900</pubDate>
				<link>http://si.mpli.st/think/google-analytics-live.html</link>
				<guid isPermaLink="true">http://si.mpli.st/think/google-analytics-live.html</guid>
			</item>
			
		
			
			<item>
				<title>si.mpli.st 새단장</title>
				<description>&lt;p&gt;항상 &lt;a href=&quot;http://si.mpli.st/&quot;&gt;si.mpli.st&lt;/a&gt; 라는 도메인을 보며 어떻게 활용할 수 있을까 고민을 많이 했다. 이전에는 &lt;a href=&quot;http://wordpress.org/&quot;&gt;WordPress&lt;/a&gt;를 사용하였고, 테마도 무료 테마 중 아무거나 집어서 사용했는데, 내키지 않았다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;si.mpli.st&lt;/strong&gt; 라는 도메인에 맞게 텀블러 스타일의 간단한 블로그를 만들어야겠다는 다짐을 한 후, 어떤 것을 담는 공간이 되어야 할 지를 먼저 생각했다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;아이디어 메모&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;지나가는 생각을 담는 공간&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;어떤 링크에 대한 나의 생각&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;드라마 감상평&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;등등...&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;http://tumblr.com/&quot;&gt;Tumblr&lt;/a&gt;부터 &lt;a href=&quot;http://posterous.com/&quot;&gt;Posterous&lt;/a&gt;까지, 여러 플랫폼을 써 보아도 채워지지 않는 무언가가 있었고, 결국 거대한 삽을 들어 이 블로그를 직접 만들었다.&lt;/p&gt;

&lt;p&gt;최근 Windows Azure가 대대적인 리뉴얼을 거치면서 &lt;strong&gt;비-윈도 가상머신&lt;/strong&gt;을 만들 수 있는 기능이 생겼는데, 마침 적절한 서버도 없고 해서 Windows Azure에 호스팅하기로 했다. &lt;a href=&quot;http://storify.com/Premist/azure&quot;&gt;이런 좋지 않은 기억&lt;/a&gt;이 있긴 하지만, 그래도 한번 더 믿어보기로 했다. &lt;/p&gt;

&lt;p&gt;엔진은 Ruby on Rails로 간단하게 끄적였는데, 최신 기술이 쓰이는 등 자랑거리는 아쉽지만 없다. 다만 블로그 엔진을 어떻게 만들고 있는지에 대한 간단한 근황 정도는 업데이트 하려고 한다.&lt;/p&gt;

&lt;p&gt;로고를 svg로 만들어서, 레티나 디스플레이에서도 잘 보이고 확대해도 깨지지 않는다. 나중에 이미지를 추가할 일이 있어도 모두 벡터 그래픽으로 처리할 예정이다.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;기존 si.mpli.st 사이트의 글들은 조만간 퍼머링크를 보존하면서 premi.st 로 이전할 생각이다. 사실 이 사이트에 모두 불러오려고 변환 툴 까지 만들었는데, 결국 무용지물이 되어버릴 것 같긴 하지만.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
				<pubDate>Mon, 18 Jun 2012 22:19:32 +0900</pubDate>
				<link>http://si.mpli.st/dev/renewal.html</link>
				<guid isPermaLink="true">http://si.mpli.st/dev/renewal.html</guid>
			</item>
			
		
			
			<item>
				<title>4박 5일간, 도쿄에 갑니다.</title>
				<description>&lt;p&gt;&lt;img src=&quot;/images/2011-11-23-tokyo-trip.png&quot; alt=&quot;followmyfootprint TOKYO 2011&quot;&gt;&lt;/p&gt;

&lt;p&gt;여행을 다니면서 블로그에 여행기를 쓰려고 해도 귀찮아져서, 기록을 전부 저장해버리기로 했습니다. 나중에 기억하기에 좋을 것 같다는 생각도 들어서 말이죠. 11월 28일부터 12월 2일까지 총 5일동안, 제 홈페이지에는 제가 있는 위치가 실시간으로 업데이트됩니다.&lt;/p&gt;
</description>
				<pubDate>Wed, 23 Nov 2011 10:31:09 +0900</pubDate>
				<link>http://si.mpli.st/travel/tokyo-trip.html</link>
				<guid isPermaLink="true">http://si.mpli.st/travel/tokyo-trip.html</guid>
			</item>
			
		
			
			<item>
				<title>iPhone 4S</title>
				<description>&lt;p&gt;iPhone 4S가 발표되었다. 3G &amp;gt; 3GS &amp;gt; 4 &amp;gt; 4S 라는 의견도 있고, 임팩트가 너무 없었다는 이야기도 나왔다. 많은 애플 팬보이들이 &amp;#39;실망이다&amp;#39; 라는 이야기를 연발했으며, 타임라인은 안드로이드 제국군의 승리로 보였다.&lt;/p&gt;

&lt;p&gt;자정에 알람을 맞춰놓았지만 전날 밤을 샌 여파가 강했던지 일어나지 못해서, 결국 2007년 이후 한번도 놓치지 않았던 키노트를 놓쳐버렸다. 팀 쿡의 첫 키노트라는 점이 의미있었지만.. 놓친 건 놓친 거니. 여튼 새로 발표된 iPhone 4S의 기능을 살펴보던 중 Siri가 보였고, 데모 영상을 본 결과 팀 쿡을 욕하게 되었다. &lt;em&gt;아니, 이런 기술을 그렇게 설명했단말야!?&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;Your wish is your command&lt;/h3&gt;

&lt;p&gt;Siri라는 이름의 가상 비서(어감이 이상하지만 넘어가자)는 기본적으로 음성 인식 기능이다. 기존 iPhone에 있던 Voice Control(한국어 : 음성 명령)이나 Android에 있던 Voice Action과 기본적으로는 비슷하다. 사용자가 원하는 기능을 음성으로 말하고,  그것에 대한 답변을 제공해주는 셈이다. 사실 텍스트로 된 설명만 읽었을때는 별 느낌이 들지 않았는데, 키노트의 데모들을 보고 생각이 바뀌기 시작했다.&lt;/p&gt;

&lt;h3&gt;문장 분석&lt;/h3&gt;

&lt;p&gt;Siri는 문장을 분석할 수 있다. 만약 Siri가 단순한 음성인식 기술이였다면, 기존의 iOS 음성 명령처럼 정해진 방식으로 정해진 명령을 내려야 알아들을 수 있을 것이다. 하지만 Siri는 어떤 방식으로 명령을 해도 인식한다. Apple의 서버에서 음성을 분석하기 때문일 것이다.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;On May 19, remind me it&amp;#39;s dad&amp;#39;s birthday.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;문맥 분석&lt;/h3&gt;

&lt;p&gt;Siri는 방금 전에 사용자가 어떤 질문을 했는지 기억한다.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Is it going to be chilly in SF this weekend?&lt;/p&gt;

&lt;p&gt;Not too cold..maybe down to 61 in SF.&lt;/p&gt;

&lt;p&gt;What about Napa Valley?&lt;/p&gt;

&lt;p&gt;Doesn&amp;#39;t seem like it. It won&amp;#39;t get below 68 in Napa.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Apple의 Siri 데모에서 나왔던 대화이다. 어떤 것이 놀라운 지 모르겠다고? 자세히 보자. 첫번째 질문을 기억하고 있지 않다면, 두번째 질문에도 대답할 수 없다. 또한 두 문장이 연계되었는지의 여부도 파악해야 한다.&lt;/p&gt;

&lt;h3&gt;개인 정보 접근&lt;/h3&gt;

&lt;p&gt;기존에 앱 스토어에 올라와있던 Siri는 근처의 매장 정보를 찾아주는 정도의 단순한 기능을 가지고 있었다. 애플의 규제 때문에 개인정보에 접근하지 못했기 때문이다. 하지만 애플이 인수하여 다시 만든 Siri는 다르다. 음성으로 문자를 보내고, 일정을 만든다. 만약 만드려는 일정이 다른 일정과 겹친다면, 경고도 해준다.&lt;/p&gt;

&lt;h3&gt;Wolfram|Alpha&lt;/h3&gt;

&lt;p&gt;울프람알파는 Wolfram Mathematica를 이용한 검색엔진(사이트의 설명을 빌리자면 Computational knowledge engine)이다. Mathematica를 이용한 수학 연산부터, 잡다한 상식까지 전부 찾아준다. Siri는 질문이 어디에도 부합하지 않을 때 Wolfram|Alpha에 검색한다. 꽤 중요한 대목이다. Wolfram|Alpha의 방대한 지식 데이터베이스에 음성으로, 그것도 자연어로 접근할 수 있다는 것이다. 카페 라떼가 몇 kcal인지, 12oz가 몇 ml인지 등의 질문을 해도 Siri는 답해줄 것이다.&lt;/p&gt;

&lt;h3&gt;맺으며&lt;/h3&gt;

&lt;p&gt;사실 오늘까지도 Siri의 능력을 의심했지만, &lt;a href=&quot;http://www.youtube.com/watch?v=fSp1_IBotjA&amp;amp;feature=youtu.be&amp;amp;a&quot;&gt;CBS의 데모 비디오&lt;/a&gt;를 보고 의도하지 않아도 꽤 높은 인식률을 보여준다는 것을 알게 될 것이다. iPhone 4S를 손에 넣으면 제일 먼저 Siri를 테스트 해 보고 싶을 만큼 개인적으로, 아니 남에게도 추천할만큼 대단한 기능이라고 생각한다. 다만 한국어 등 다국어 지원이 어떻게 될지는 걱정스럽기도 하다. 하지만 현재까지 존재했던 음성으로 기능을 작동시키는 기술 중에서는 사용자의 행동패턴을 제일 잘 반영한 것은 분명하다.&lt;/p&gt;

&lt;h3&gt;참고 사이트&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://thisismynext.com/2011/10/04/siri-work/&quot;&gt;Why Siri just might work&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://hanury.net/wp/archives/2998&quot;&gt;자연어 처리 전공자로써 iPhone 4S의 Siri에 대한 깨작거림 &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
				<pubDate>Sat, 08 Oct 2011 08:43:03 +0900</pubDate>
				<link>http://si.mpli.st/think/thoughts-on-iphone-4s.html</link>
				<guid isPermaLink="true">http://si.mpli.st/think/thoughts-on-iphone-4s.html</guid>
			</item>
			
		
			
			<item>
				<title>Steve Jobs (1955 - 2011)</title>
				<description>&lt;div class=&quot;yt-container&quot;&gt;&lt;iframe class=&quot;yt-embed&quot; width=&quot;560&quot; height=&quot;420&quot; src=&quot;http://www.youtube.com/embed/dX9GTUMh490&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;

&lt;p&gt;Here’s to the crazy ones.&lt;/p&gt;

&lt;p&gt;The misfits.&lt;/p&gt;

&lt;p&gt;The rebels.&lt;/p&gt;

&lt;p&gt;The troublemakers.&lt;/p&gt;

&lt;p&gt;The round pegs in the square holes.&lt;/p&gt;

&lt;p&gt;The ones who see things differently.&lt;/p&gt;

&lt;p&gt;They’re not fond of rules.&lt;/p&gt;

&lt;p&gt;And they have no respect for the status quo.&lt;/p&gt;

&lt;p&gt;You can quote them, disagree with them, glorify or vilify them.&lt;/p&gt;

&lt;p&gt;About the only thing you can’t do is ignore them.&lt;/p&gt;

&lt;p&gt;Because they change things.&lt;/p&gt;

&lt;p&gt;They push the human race forward.&lt;/p&gt;

&lt;p&gt;And while some may see them as the crazy ones, we see genius.&lt;/p&gt;

&lt;p&gt;Because the people who are crazy enough to think they can change the world, are the ones who do.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rest in peace, Steve Jobs.&lt;/strong&gt;&lt;/p&gt;
</description>
				<pubDate>Fri, 07 Oct 2011 03:31:08 +0900</pubDate>
				<link>http://si.mpli.st/life/steve-jobs.html</link>
				<guid isPermaLink="true">http://si.mpli.st/life/steve-jobs.html</guid>
			</item>
			
		
			
			<item>
				<title>생활코딩 @ 과천중앙고등학교</title>
				<description>&lt;p&gt;동아리 담당 선생님이 색다른 걸 해보면 어떨까..라는 제안을 하셨다. 내가 잘 하는 것이 프로그래밍이니 프로그래밍을 한다고 해도 전문적인 개발을 할 수도 없고, 루비같은 마이너 언어를 할 수도 없어서 아주 간단한 언어의 일종인 자바스크립트로 시작하기로 했다.&lt;/p&gt;

&lt;p&gt;자바스크립트를 선택한 이유는 &lt;a href=&quot;http://processingjs.org/&quot;&gt;Processing.js&lt;/a&gt;를 배우기 위해서이다. Processing이라는 시각화 언어의 일종인데, Processing.js는 Processing을 자바스크립트로 포팅한 것인데, canvas 객체를 직접 다루는 것보다는 훨씬 쉽고 간편해서 택하게 되었다.&lt;/p&gt;

&lt;p&gt;그래서 어떻게 가르쳐야 잘 가르쳤다고 소문이 날까 생각을 하다가 &lt;a href=&quot;http://opentutorials.org/&quot;&gt;생활코딩&lt;/a&gt;이 갑자기 떠올랐다. 페이스북 그룹을 찾아 가입하게 되었는데, 이정도의 난이도라면 초심자도 쉽게 접근할 수 있을 것 같았다.&lt;/p&gt;

&lt;p&gt;한번 생활코딩 강의를 재생하고, 부족한 부분(alert를 띄울 때 따옴표가 들어가면 역슬래시로 이스케이프라던가, 기타 여러가지 설명해주지 않는 부분들)은 설명을 하면서 진행했다. HTML/CSS에 대한 기초적인 지식 없이 바로 진행한 거라 이해가 안가는 부분이 많았을 것 같다.&lt;/p&gt;

&lt;p&gt;의외로 잘 따라오시던 분은 동아리 담당 선생님. 강의를 집에 가서(!) 봐도 되겠다면서 열정적인 모습을 보여주셨는데 왜 동아리 애들은 그러질 못하니 ㅜㅜ&lt;/p&gt;
</description>
				<pubDate>Sat, 17 Sep 2011 19:13:54 +0900</pubDate>
				<link>http://si.mpli.st/geek/opentutorials-at-school.html</link>
				<guid isPermaLink="true">http://si.mpli.st/geek/opentutorials-at-school.html</guid>
			</item>
			
		
			
			<item>
				<title>Chrome OS, Chromebook에 대한 생각</title>
				<description>&lt;p&gt;Chrome OS가 처음 나왔을때 내 생각은, &amp;quot;너무 일찍 나왔다&amp;quot; 라는 생각뿐이였다. Google이 웹 오피스 환경을 제공하고, GMail을 제공한다고는 하지만, 턱없이 부족하다는 것이 내 생각이였다. 다른 많은 분들도 아직은 시기상조가 아니냐는 의견이 대다수였다. 이제 막 클라우드 개념이 퍼져나갈 시기였고, 유저들은 토런트를 사용하고 있었다. 미디어 라이브러리는 C:/Users/User/Music 에 저장되어 있는 것이 기본이였고, 하드디스크를 테라바이트 단위로 운영하는 사람들도 꽤 있었다.&lt;/p&gt;

&lt;div class=&quot;yt-container&quot;&gt;&lt;iframe class=&quot;yt-embed&quot; width=&quot;560&quot; height=&quot;420&quot; src=&quot;http://www.youtube.com/embed/0QRO3gKj3qw&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;

&lt;p&gt;물론 웹이 주목받고 HTML5니 WebGL이니 새로운 웹 기술이 등장하여 웹 시대를 꿈꾸던 개발자들의 장밋빛 전망은 존재했지만, 당장 모든것을 웹으로 옮기기는 힘든 시기가 바로 이 때였다. Google이 Chrome OS의 태블릿 프로토타입과 위에 있는 컨셉영상을 공개했을 때에, 난 구글이 또 하나의 실험을 하고 있다고 생각했다. 실용화 단계는 아니지만, &amp;quot;우리는 이런 것도 한다&amp;quot; 라는 인식을 심어주기 위한, 그런 실험 말이다. &lt;/p&gt;

&lt;p&gt;그 이후 Chrome OS 소스코드가 공개되고, PC에서 구동 가능한 버전도 속속 출연했다. Parallels와 VMWare는 Chrome OS를 돌릴 수 있는 가상 이미지를 제공하기 시작하였다. 구글도 Cr-48 파일럿 프로그램을 운영하면서 Chrome OS에 대한 유저 피드백을 받기 시작하였다. 다만 Cr-48 파일럿 프로그램은 외국에서만 운영되어서, 국내 유저들은 가상머신이나 라이브 이미지로 체험하는 수밖에 없었다.&lt;/p&gt;

&lt;p&gt;운좋게도 올해 2월쯤 Cr-48을 만져볼 기회가 생겨서, 잊고있던 Chrome OS에 대한 환상이 다시금 떠올랐다. 가상머신으로는 물론 써보았지만, Chrome OS를 위해 &lt;em&gt;특별히&lt;/em&gt; 제작된 랩탑은 어떤 느낌일까 하는 생각도 들었다. &lt;/p&gt;

&lt;p&gt;랩탑을 여는 순간 굉장히 빠른 속도로 부팅이 진행되었고, 곧 로그인 스플래시 화면이 나왔다. Google Account로 로그인을 할 수 있었으며, 로그인이 완료된 후 나를 반겨준건 설정 화면이 아니였다. 이전에 Chrome 브라우저에서 사용하던 북마크, 익스텐션 등이 바로 이전되어 있었다. 정말이지 깜짝 놀랐다.&lt;/p&gt;

&lt;p&gt;그때의 느낌을 말하자면, 마치 &amp;quot;이것이 클라우드다!&amp;quot; 라고 과시하는 구글의 모습을 본 듯한 충격이였다. 비록 내가 싫어하는 Adobe Flash가 들어가 있긴 했지만, 랩탑이나 데스크탑에서 느꼈던 웹 경험을 그대로 가져왔고, 속도도 쓸만했다. 다운로드도 클라우드 스토리지에 가능했기에 불가능한 작업은 거의 없었다. 영상 편집은 animoto 등으로 간단하게 가능하고, 문서 작업은 Microsoft Office Live나 Google Docs로, 프리젠테이션은 Prezi로 할 수 있었다. 아쉬운건 게임 정도? WebGL이 보편적으로 쓰이지 않았기 때문에 3D 게임은 즐길 수 없었고, 그나마 즐길 수 있는 건 Facebook의 소셜게임 같이 Adobe Flash를 사용하는 게임들이였다.&lt;/p&gt;

&lt;p&gt;그렇게 시간이 지났고, 간간히 들려오는 소식으로는 Honeycomb(Android) 팀과 Chrome 팀이 경쟁하고 있다는 이야기였다. 사실상 두개의 팀이 분리되어 있었으므로, 중복된 분야에서 경쟁하는 것은 어찌보면 당연한 일이였다. Android 제품군으로는 Motorola Xoom이 출시되었고, 갤럭시 탭 10.1이 발표되었다. 반면 Chrome OS에 대한 소식은 없었다.&lt;/p&gt;

&lt;p&gt;오늘(한국 시간으로 2011년 5월 12일), Google I/O 컨퍼런스에서 Chrome OS에 대한 새로운 소식이 들려왔다. 바로 Chromebook에 대한 이야기였다. Samsung이나 Acer 등 다양한 제조사가 참여한 Chromebook은, Chrome OS를 얹은 랩탑이였다. 그 이상도 그 이하도 아니였지만, 다시 들려온 소식에 기쁘지 않을 수 없었다.&lt;/p&gt;

&lt;div class=&quot;yt-container&quot;&gt;&lt;iframe class=&quot;yt-embed&quot; width=&quot;560&quot; height=&quot;420&quot; src=&quot;http://www.youtube.com/embed/TVqe8ieqz10&quot;&gt;&lt;/iframe&gt;&lt;/div&gt;

&lt;p&gt;Chromebook은 렌탈 서비스 등 기존 PC에 비해 정말 저렴한 가격대를 형성할 것으로 보인다. 위 영상에서 말하는 것과 같이, Chromebook은 &amp;quot;인터넷 그 자체&amp;quot; 이다. 오직 인터넷을 위하여 제작된 기기인만큼, 가격이 비쌀 필요도 없고, 비싸서도 안되었다. 일단 가격적인 부분이나 정책적인 부분에서는 잠재적인 고객을 많이 확보했다고 할 수 있다.&lt;/p&gt;

&lt;p&gt;글 중간에 말했다시피, Chrome OS의 가장 약한 부분은 게임이였다. 소셜게임 등 간단한 게임밖에 즐길 수 었다는 것이 그 이유였다. 하지만 이번에 WebGL로 개발된 Roxio사의 Angry Birds가 Chrome 웹 스토어에 올라가면서, 그런 걱정도 많이 줄어들었다. 물론 WebGL을 이용한 게임시장이 많이 활성화 된 것은 아니지만, 최소한 가능성을 보여주었다는 점에서(그것도 엄청난 판매를 이루어낸 인기게임이 출시되었다!) 의미가 있다. &lt;/p&gt;

&lt;p&gt;또한 클라우드 환경도 많이 개선되었다. Microsoft Office Live는 매우 발전하여 왠만한 문서작업을 할 수 있을 정도로 개선되었고, 국내에서도 KT 유클라우드나 네이버 N드라이브와 같이 클라우드 스토리지가 늘어나고 있다. 사진은 Picasa나 Flickr에 보관하고, Google Movies에서 영화를 빌려볼 수도 있다. 음악 라이브러리를 날릴 염려 없이 Amazon Cloud Player나 Google Music에 올림으로써 언제 어디서나 어떤 방법으로든 음악을 들을 수 있게 되었고, 크롬 웹 스토어에는 Chromed Bird나 TweetDeck과 같은 소셜 네트워킹 클라이언트도 많이 증가하고 있다.&lt;/p&gt;

&lt;p&gt;사람들은 인터넷에서 논다. 워크스테이션 급 작업이나 게임 등을 제외하면, 컴퓨터 사용의 90% 이상은 인터넷에서 소비한다고 할 수 있다. Chrome은 사용자층이 급속도로 늘어가는 브라우저이고, 그 속도도 빠른 버전업을 거쳐가면서 더욱 빨라지고 있다. 또한 Firefox만큼은 아니지만 충분한 익스텐션을 가졌으며, 무엇보다 가볍다. 이러한 사실이 알려주는 것은 무엇일까? &lt;/p&gt;

&lt;p&gt;내 생각에는 Chromebook(혹은 Chrome OS)가 단순히 &amp;quot;리눅스에 브라우저만 얹은 것&amp;quot; 이 아니라, 우리가 사용할 궁극의 컴퓨터가 지향하는 바를 나타내주는 것이라고 생각한다. 모든 것이 클라우드에서 이루어지는 컴퓨터. 잃어버려도 데이터는 항상 존재하고, 재부팅의 연속인 업데이트를 진행할 필요가 없다. 귀찮은 절차를 모두 생략하고, 우리가 필요한 작업을 모두 수행할 수 있다는 점. 그것이 정말 큰 매력이 아닐까.&lt;/p&gt;
</description>
				<pubDate>Fri, 13 May 2011 07:36:34 +0900</pubDate>
				<link>http://si.mpli.st/think/chrome-os-chromebook.html</link>
				<guid isPermaLink="true">http://si.mpli.st/think/chrome-os-chromebook.html</guid>
			</item>
			
		
			
			<item>
				<title>맥을 쓰게 된 계기</title>
				<description>&lt;p&gt;흔히 저를 맥 올드비라고 하시는 분들이 있는데, 저도 2008년도까지는 윈도만 썼고, 많은 애착을 가지고 있었습니다. 주로 했던 일은 AutoIT 스크립트와 Thinstall 등으로 무설치 프로그램을 제작해서, BartPE 시스템에 올려 사용하는 등의 작업이였습니다. 이전까지 컴퓨터 수리를 많이 나가는 탓에 그 과정을 단순화시킬 필요가 있어서였죠. 또 테마에 은근히 많이 집착해서 윈도 테마를 갈아엎고, 직접 테마를 만들기도 하였습니다.&lt;/p&gt;

&lt;p&gt;하지만 2008년에 접한 해킨토시는, 저에게 큰 충격을 주기에 충분했습니다. 비록 AMD 애슬론 프로세서에서 돌아가는 느려터진  시스템이었지만, 당시 윈도를 썼고 리눅스의 존재만 알고 있었던 저에게는 꽤나 색다른 경험이였죠. 그 이후로 새 윈도 시스템을  구축했을때도 이러한 점을 감안하여 최대한 해킨토시 친화적인 시스템을 구축하기에 이르렀습니다.&lt;/p&gt;

&lt;p&gt;2009년말, 케이머그에서 &lt;strong&gt;Mac Mini&lt;/strong&gt;를  구입하였습니다. 제 첫 Mac이였죠. Mac Mini는 그때 사용하던 윈도 시스템보다 사양이 떨어졌지만, 신기하게도 제가 하는 작업에는 큰 지장을 주지 않았습니다. 영상편집이나 게임 등의 가끔 하는 작업을 빼면 거의 코드 작성이나  블로깅 등이였으니까요.&lt;/p&gt;

&lt;p&gt;2010년에는 MacBook을 장만했다가 처분하고 &lt;strong&gt;MacBook Pro&lt;/strong&gt;로 넘어갔습니다. 그때 장만한 MBP를 지금도 사용하고 있구요. 이제는 영상편집도 MBP에서 하려고 노력하고 있습니다. 물론 1080i 정도 되는 영상들은 따로 옮겨서 편집하지만요.
윈도를 사용하는 비율도 매우 낮아졌습니다. 초기에는 VMWare에 많이 의존했었는데, 지금은 홈택스나 기타 ActiveX가 필요할때만 Parallels를 켭니다. 인터넷 뱅킹도 스마트폰으로 하거나 맥용 클라이언트를 다운받아서 처리하구요.&lt;/p&gt;

&lt;p&gt;지금 와서 느끼는 &lt;strong&gt;윈도우의 공백&lt;/strong&gt;이 없는 것은 아닙니다. 코드를 작성할때 화면을 분할하기 편한 에어로 스냅(Aero Snap), 여러 강력한 편집기 등.. 지금도 에어로 스냅이 그리워서 BetterTouchTool에 있는 비슷한 기능을 켜놓을 정도니까요. 하지만 지금 윈도로 돌아가라면 전 못 돌아갈 것 같습니다. (...)&lt;/p&gt;

&lt;p&gt;여담이지만, Mac을 사용한 이후로 정품 소프트웨어의 사용률이 늘었습니다. VMWare, Parallels같은 가상화 툴부터 Coda(제가 산 어플리케이션 중에 제일 비싼 것 같네요), Transmit, Espresso 등.. 꽤 많은 툴을 돈 주고 산 것 같네요. 같은 사용자 경험과 기능을 주는 윈도우용 어플리케이션이 없어서 사게 되는 것 같네요.&lt;/p&gt;
</description>
				<pubDate>Sun, 01 May 2011 08:13:41 +0900</pubDate>
				<link>http://si.mpli.st/think/why-i-switched-to-mac.html</link>
				<guid isPermaLink="true">http://si.mpli.st/think/why-i-switched-to-mac.html</guid>
			</item>
			
		
			
			<item>
				<title>iPad 2에 대한 생각</title>
				<description>&lt;p&gt;흔히 사람들은 애플의 제품은 2세대를 사야 한다고 한다. 왜냐하면 1세대에는 결함이 많기 때문이다.&lt;/p&gt;

&lt;p&gt;하지만 iPad는 1세대의 징크스를 충분히 이겨냈다. 엄청난 판매고와 시장에 &amp;#39;태블릿&amp;#39; 열풍을 일으켰기 때문이다. 사람들은 전혀 새로운 기기에 열광했고, 우리나라에서도 출시하기 전 &amp;#39;문익촌&amp;#39; 사건 등으로 매우 유명해진 기기 중 하나이다.&lt;/p&gt;

&lt;p&gt;그리고 3월 2일, iPad 2가 공개되었다.&lt;/p&gt;

&lt;h3&gt;어김없이 등장한 루머&lt;/h3&gt;

&lt;p&gt;iPhone 이후로 사람들이 애플에 다시 열광하기 시작함과 동시에, 애플의 신제품에 대한 기대는 갈수록 높아졌고, &amp;#39;다음엔 애플이 어떤 제품을 내놓을까?&amp;#39; 라는 호기심은 갈수록 높아졌다. 수많은 루머가 쏟아져나왔으며, 아이러니하게도 이런 루머들이 애플에 아이디어를 제공하는 원동력이 된다는 우스갯소리까지 나돌았다.&lt;/p&gt;

&lt;p&gt;iPad 2가 출시되기 전, 차기 iPad에 대한 루머는 폭발적으로 쏟아졌고, 출시일이 가까워질수록 루머의 정확도는 점점 커져갔다. 마침내 출시 직전 아이패드 후면이 유출되었고, 사람들은 이건 애플의 디자인이 아니라며 믿지 않았다. &lt;strong&gt;하지만 그것이 실제로 일어났습니다&lt;/strong&gt;.&lt;/p&gt;

&lt;h3&gt;하드웨어&lt;/h3&gt;

&lt;p&gt;만져볼수는 없었지만, 여러 핸즈-온 비디오와 Apple iPad Event를 실시간으로 보면서 느꼈던 차이점을 작성해본다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;CPU의 비약적인 향상이 이루어졌다. Apple A4 1GHz 프로세서를 사용하던 1세대와는 달리, &lt;strong&gt;Apple A5 1GHz&lt;/strong&gt;(평상시 사용때는 900MHz) &lt;strong&gt;듀얼코어&lt;/strong&gt; 프로세서를 사용했다. 코어가 하나 늘어난 게 실감이 되지 않는다면, 아래의 벤치마킹 결과를 참조하기 바란다.&lt;/li&gt;
&lt;li&gt;전혀 색다른 그래픽을 볼 수 있다. PowerVR SGX543MP2 를 사용, 기존 iPad보다 9배 좋은 그래픽을 볼 수 있다고 알려졌다. 9배까진 아니지만 &lt;a href=&quot;http://toucharcade.com/2011/03/11/ipad-2-initial-impressions/&quot;&gt;touchArcade의 비교 스크린샷&lt;/a&gt;을 보면, 안티앨리어싱이 적용된 것 뿐만 아니라, 텍스쳐의 느낌이 확실히 다르다는 것을 볼 수 있다. &amp;#39;Real Racing 2 HD&amp;#39;, &amp;#39;Dead Space&amp;#39; , &amp;#39;Asphalt 6 HD&amp;#39;, &amp;#39;Infinity Blade&amp;#39; 와 같은 게임이 iPad 2에 최적화되어 있다고 한다.&lt;/li&gt;
&lt;li&gt;램이 512MB로 증가하였다. 1GB를 기대하고 있던 사람들이 많았듯이, &lt;em&gt;꽤 적은&lt;/em&gt; 증가라고 볼 수 있다.&lt;/li&gt;
&lt;li&gt;부가적인 개선사항으로는 Gyroscope, iPod Touch 4세대와 동일한 카메라, CDMA 지원 등이 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;디자인&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;두께가 &lt;strong&gt;8.8mm&lt;/strong&gt;로 30% 얇아졌다. 무려 iPhone 4보다도 얇다. 뒷면 유출 사진을 보고 안 사겠다고 한 사람이 있었는데, 두께를 보고 그 마음을 접었다고 한다. ㅋㅋ&lt;/li&gt;
&lt;li&gt;후면에 &lt;strong&gt;스피커 그릴&lt;/strong&gt;이 생겼다. 완전한 유선형 디자인으로 하단에 스피커를 배치할 수 없게 되어, 후면 최하단에 스피커 그릴이 있다.&lt;/li&gt;
&lt;li&gt;베젤 색상이 &lt;strong&gt;블랙&lt;/strong&gt;과 &lt;strong&gt;화이트&lt;/strong&gt; 두가지로 제공된다. 사람들이 iPhone 4에서 경험하지 못했던 화이트 색상을 iPad 2에서는 제공한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;소프트웨어 (iOS 4.3)&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;카메라 어플리케이션, Photo Booth 어플리케이션, FaceTime 어플리케이션이 추가되었다.&lt;/li&gt;
&lt;li&gt;Smart Cover를 열고 닫으면 자동으로 잠금이 걸리고 풀린다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;iPad 2 등장의 의미&lt;/h3&gt;

&lt;p&gt;Apple iPad Event를 보면, 잡스가 유난히 &amp;#39;Post PC&amp;#39; 라는 단어를 쓰는 것을 눈치챌 수 있다. iPad 1세대 발표때는 &amp;quot;멀티미디어 컨텐츠를 소비할 수 있는 새로운 플랫폼&amp;quot; 이라고만 발표했던 것과는 달리, 3월 2일의 잡스는 유난히도 &amp;quot;Post-PC&amp;quot; 라는 단어를 강조한다.&lt;/p&gt;

&lt;p&gt;많은 사람들이 iPad를 구입하고 PC의 필요성을 잊고 있다고 한다. 지금의 iPad는 PC를 대체할만큼 완벽하지는 않다. 플래시를 지원하지 않는다거나, 여러개의 창을 띄워놓고 한번에 작업을 처리하기가 어렵다. 또한 왠지 PC와는 다르게 &lt;strong&gt;어플리케이션을 전환하는 도중 작업의 흐름이 끊긴다&lt;/strong&gt;. 반쪽 멀티태스킹의 단점이다.&lt;/p&gt;

&lt;h3&gt;iPad 2가 PC가 될 수 있을까&lt;/h3&gt;

&lt;p&gt;하지만 이번 Apple iPad Event때는, 두 가지 어플리케이션이 iPad용으로 발표되었다. &lt;strong&gt;GarageBand&lt;/strong&gt;와 &lt;strong&gt;iMovie&lt;/strong&gt;가 바로 그 주인공이다.&lt;/p&gt;

&lt;p&gt;iLife의 iOS 포팅은 iPhone 4부터 예견되어왔던 일이었다. iPhone 4용 iMovie가 출시되면서, 애플이 기타 iLife 시리즈(GarageBand, iPhoto 등)을 출시할 것이라는 예상이 있었다. iPhoto는 iPad의 &amp;#39;Photos&amp;#39; 안에 슬라이드 쇼나, Places 같은 기능으로 녹아들어갔다. 그리고 마침내 iMovie와 GarageBand for iOS(iPad)가 출시되었다.&lt;/p&gt;

&lt;p&gt;Mac의 번들 소프트웨어가 점점 iOS로 포팅되기 시작한다. iPad의 브라우저는 Nitro 엔진을 채용하면서 강력해졌고, iOS의 멀티태스킹은 안정적으로 변해가고 있다. 물론 PC의 모든 작업을 iPad로 옮길 수 있다는 것은 아니다. 하지만 우리가 컴퓨터를 사용하게 되는 주된 작업 - 인터넷, 메일 체크, 음악듣기, 영화보기 등 - 는 충분히 iPad로 할 수 있다.&lt;/p&gt;

&lt;p&gt;우리 학교에서는 앞으로 선생님들에게 노트북 대신 iPad를 제공한다고 한다. 전자칠판 기능도 되고, 가볍고, 어디서나 자신의 컴퓨터에 접속할 수 있기 때문에 별 지장이 없기 때문이다. $999 정도 하는 &lt;em&gt;꽤 비싼&lt;/em&gt; 랩탑을 사는 것보다 $499 정도 하는 라이트한 태블릿을 선호하는 유저층이 증가하고 있다. 새로운 컴퓨팅의 시대가 도래하고 있다.&lt;/p&gt;

&lt;p&gt;만약 PC의 기능을 정 써야 한다면, &lt;strong&gt;원격 접속을 위한 장비로 사용&lt;/strong&gt;할 수도 있다. RDP나 VNC 세션에 접속하면, PC의 소프트웨어를 활용할 수 있다. 여러 사람이 사용가능한 서버를 열어두고 iPad를 구입하여 접속하면, 그것도 나름대로 괜찮을 것 같다는 생각이 든다. 실제로 학교 선생님들의 컴퓨터에 RDP 터미널을 구축했고, 각각의 데스크톱을 가질 수 있게 구축해 놓았다. RDP 세션과 iPad 사이의 파일 동기화는 KT uCloud를 사용한다.&lt;/p&gt;

&lt;h3&gt;Smart Cover&lt;/h3&gt;

&lt;p&gt;애플이 이번 iPad를 출시하면서, 악세서리 치고는 꽤 오랜 시간동안 설명한 것이 있다. 바로 Smart Cover. 때밀이 수건이다, 욕실용 악세서리다 하는 의견이 많지만(…), 거치대로는 최강의 악세서리가 아닐까. 착 붙이고, 아무렇게나 접어서 거치하면 끝이니까 말이다.&lt;/p&gt;

&lt;h3&gt;결론&lt;/h3&gt;

&lt;p&gt;장기적으로 사용자가 쓰게 될 미래의 컴퓨터의 원형은 iPad 같다. 클라우드로 모든 데이터를 옮기고, 인터넷 접속과 디스플레이만이 가능한 장비로 모든 컴퓨팅을 해결 할 수도 있을 듯 싶다. 먼 미래의 이야기일 것 같지만 Post-PC라는 단어의 선택이 보여주듯 애플은(아니, 잡스만?) iPad 2가 Post-PC가 될 것이라고 확신하는 것 같다. 결과는 두고 볼 일이지만 말이다.&lt;/p&gt;
</description>
				<pubDate>Mon, 14 Mar 2011 08:53:58 +0900</pubDate>
				<link>http://si.mpli.st/think/ipad-2.html</link>
				<guid isPermaLink="true">http://si.mpli.st/think/ipad-2.html</guid>
			</item>
			
		
			
			<item>
				<title>근황</title>
				<description>&lt;p&gt;학기초라 정신이 없긴 하지만 일단은 잘 지내고 있다. 고등학교 2학년으로 올라와서 뭔가 바뀔 줄 알았는데 딱히 바뀐 건 없고, 1학년때 정말 싫었던 학생부장을 이제 보지 않게 되어서 좋다.&lt;/p&gt;

&lt;p&gt;부모님이 그나마 공부를 강제하지 않아서 그렇지, 압박을 꽤나 받는 중. 이맘때 되면 모두가 받는 그런 고통이긴 한데... 친척들이 오면 &amp;quot;공부 잘 하고 있니?&amp;quot; 라던가, 부모님의 은근한 압박. 걱정되어서 하시는 말씀이지만 조금 불쾌하다. 갈 길을 찾은 사람에게 다른 길을 가라고 강요하고 있다고 생각하니.. 그래도 특정 분야에 한정된 지식만 가지고 살아가는 100% 공돌이가 되지 않기 위해서 노력하는 중이다. &lt;/p&gt;

&lt;p&gt;하고싶은 일은 많고, 해야할 일도 많은데 2주동안은 야간 &lt;em&gt;자율&lt;/em&gt; 학습을 해야해서 미루고 있다. 학생 상담 차원에서 하는거니까 뭐, 어쩔 수 없다고 생각한다. 특히 담임선생님이 아이들을 많이 아끼시려 하는 타입인 것 같아, 한 사람당 40분~1시간동안 상담을 한다. 다른 애들은 길다고 싫다는데 저는 조금 더 많은 이야기를 나눌 수 있는 것 같아 좋다.&lt;/p&gt;

&lt;p&gt;해야만 하는 일과, 정말 하고싶은 일 중 어느 것을 우선해야 할지 모르겠다. 물론 두개중에 하나가 공부라거나 이런 건 아니지만 (?) 더 많이 생각해봐야 할 것 같다.&lt;/p&gt;
</description>
				<pubDate>Tue, 08 Mar 2011 08:59:37 +0900</pubDate>
				<link>http://si.mpli.st/life/school-days.html</link>
				<guid isPermaLink="true">http://si.mpli.st/life/school-days.html</guid>
			</item>
			
		
			
			<item>
				<title>미투데이 탈퇴</title>
				<description>&lt;p&gt;그동안 쓰지 않고 방치해두고 있었는데, 오늘 그냥 탈퇴해버렸습니다. 미친을 하나도 두지 않고 일기장 형식으로 쓰다보니 별로 재미도 없었고, 오히려 미투데이를 하면서 외로워진 느낌도 있구요.&lt;/p&gt;

&lt;p&gt;그 외에도 이상한 사람들이 너무 많고, 무분별한 스타 마케팅, 네이버화 되는 서비스 등 안좋은 일도 많아서 과감하게 탈퇴하였습니다.&lt;/p&gt;

&lt;p&gt;더이상 가는 일은 없을 것 같네요.&lt;/p&gt;
</description>
				<pubDate>Wed, 16 Feb 2011 01:49:10 +0900</pubDate>
				<link>http://si.mpli.st/life/exiting-me2day.html</link>
				<guid isPermaLink="true">http://si.mpli.st/life/exiting-me2day.html</guid>
			</item>
			
		
			
			<item>
				<title>MacBook Pro 디스크 교체</title>
				<description>&lt;p&gt;얼마전 웨스턴디지털의 하드디스크를 구매했다는 포스팅을 올린 적이 있다. 320GB 하드디스크에는 내가 사용하는 그래픽 리소스를 전부 담아둘 수 없었고, Pro임에도 불구하고 소음때문에 채택된 5400rpm 하드디스크는 나에게 큰 컴플렉스였다.&lt;/p&gt;

&lt;p&gt;하지만 신형 유니바디 MacBook Pro는 매우 쉽게 하드디스크 교체가 되므로, 한번 사서 해보자는 생각에 질러버렸다. 맥북 프로를 분해해 보니, 노트북 주제에 팬이 두개 달려있었고, 내장형 배터리의 위엄이 흘러나왔다. 우측 상단에 있는 하드디스크를 분해하면 되었다.&lt;/p&gt;

&lt;p&gt;문제는 거기서 시작되었다. 기존 MacBook에 사용하려고 별렌치(Torx)를 구매했었는데, 신형 MacBook Pro에는 이 Torx가 맞지 않는 것이다.  한참을 고민하다가 지금 사올수도 없기에 그냥 펜치로 잡고 돌려버렸다. 의외로 잘 빠진다! 이제 새로 구입한 하드디스크를 장착하고 재조립하였다.&lt;/p&gt;

&lt;p&gt;MacBook Pro를 워낙 험하게 사용하여 ODD가 고장난 터라, USB 드라이브로 설치를 해야하는 상황이였다. 하지만 i5/i7를 사용하는 OS X 기반 컴퓨터는 10.6.4 이상의 디스크로만 설치가 가능하였다. 아니면 번들로 들어있는 10.6.3 디스크로만 설치가 가능하였다.&lt;/p&gt;

&lt;p&gt;어쩔 수 없이 새로운 설치 방법을 찾았는데, 그것이 바로 NetInstall. Mac OS X Server에서 지원하는 기능으로, 원격 디스크와 비슷한 기능이다. 하지만 원격 디스크가 적용되는 MacBook Air 모델과는 달리, NetInstall은 모든 Mac 제품군에서 사용이 가능하였다.&lt;/p&gt;

&lt;p&gt;첫번째로, OS X Server가 설치된 Mac Mini에 10.6.3 번들 디스크를 넣었다. &amp;quot;디스크 유틸리티&amp;quot; 에서 .dmg 파일로 해당 이미지를 생성하였다.  한 20~35분이 소요되었고, MacBook Pro의 번들 설치 디스크가 이미지로 복제되었다.&lt;/p&gt;

&lt;p&gt;두번째로, OS X Server Tools에 있는 &amp;quot;System Image Utility&amp;quot; 를 이용하여 해당 이미지를 NetInstall 이미지로 변환시켰다. 변환할 때는, 설치 자동화를 선택할 수도 있고, pkg 파일 통합도 가능하며, 사용자 계정 설정, 하드디스크 지우기 옵션 등을 선택할 수 있어서 용이하다.&lt;/p&gt;

&lt;p&gt;세번째로, 완성된 .nbi를 /NetBootSP0 폴더에 복사하고 Server Admin에서 NetBoot 항목을 설정해주었다.&lt;/p&gt;

&lt;p&gt;이제 MacBook Pro에 이더넷 선을 연결하고, N키를 누른 채 부팅을 시도하였다. 과연 이 절차만으로 네트워크 설치가 될지 궁금했다. 결과는 성공! NetInstall 이미지가 정상적으로 잡히고, 지구본 모양이 뜨더니 설치를 자동으로 시작했다. 기존 설치 방법대로 OS X를 사용자화 한 뒤, 설치를 눌렀다.&lt;/p&gt;

&lt;p&gt;시간은 USB로 설치할 때 보다 조금 빠른 느낌이였다. 설치 완료 후 Welcome 동영상을 보고, 데이터 복사를 시작한 뒤 잠자리에 들었다.&lt;/p&gt;

&lt;p&gt;하드를 교체하면서 느낀 결론은 두 가지. 첫번째, 맥북프로 내부 설계 최고. 두번째, NetInstall 기능 최고. 참고로 NetBoot이라는 기술을 사용하면, MacBook 내에 있는 하드디스크가 아닌 서버의 하드디스크로 부팅도 가능하다고 한다.&lt;/p&gt;
</description>
				<pubDate>Sat, 12 Feb 2011 02:08:25 +0900</pubDate>
				<link>http://si.mpli.st/geek/mbp-disk-replacement.html</link>
				<guid isPermaLink="true">http://si.mpli.st/geek/mbp-disk-replacement.html</guid>
			</item>
			
		
	</channel>
</rss>